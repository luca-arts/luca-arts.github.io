{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Luca School of Arts - Polymath lab \u00b6 in short \u00b6 a research lab and community, bridging creatives and technology projects \u00b6 visit project page Slides \u00b6 Generative AI for Graphic Storytelling Slides for workshop on dec 20th 2022 at LUCA School of Art in Schaarbeek test About \u00b6 who \u00b6 Polymath lab is a researchlab and community who wants to bring creatives in touch with emerging technologies and together with them investigate how these new technologies can be of use to them or empower them. (Think AI, XR, web3.0, HCI) Technological generalists combining forces with teachers from Luca, other researchers within KULeuven and the industry surrounding Luca school of Arts. An open group for applied research consisting of: teacher-researchers (target: education) full-time researchers (target: workfield) why \u00b6 Innovation is change . These changes follow quickly on a wide scale of topics. We want to research how these changes will affect the future of creatives: How do creatives position themselves against the changes and the use of the innovative technologies? How can the creatives be enabled to use these technologies, in an intended yet also unintended fashion? How can we stimulate peer-training and knowledge sharing? How can we influence the workfield to adopt these emerging technologies? what \u00b6 research projects accessible knowledge gathering and sharing link with workfield dissemination of research results get in touch \u00b6 mail us at polymath [at] luca-arts [dot] be for: interest researchprojects participation of or presenting a talk knowledge sharing socials \u00b6","title":"Home"},{"location":"#luca-school-of-arts-polymath-lab","text":"","title":"Luca School of Arts - Polymath lab"},{"location":"#in-short","text":"a research lab and community, bridging creatives and technology","title":"in short"},{"location":"#projects","text":"visit project page","title":"projects"},{"location":"#slides","text":"Generative AI for Graphic Storytelling Slides for workshop on dec 20th 2022 at LUCA School of Art in Schaarbeek test","title":"Slides"},{"location":"#about","text":"","title":"About"},{"location":"#who","text":"Polymath lab is a researchlab and community who wants to bring creatives in touch with emerging technologies and together with them investigate how these new technologies can be of use to them or empower them. (Think AI, XR, web3.0, HCI) Technological generalists combining forces with teachers from Luca, other researchers within KULeuven and the industry surrounding Luca school of Arts. An open group for applied research consisting of: teacher-researchers (target: education) full-time researchers (target: workfield)","title":"who"},{"location":"#why","text":"Innovation is change . These changes follow quickly on a wide scale of topics. We want to research how these changes will affect the future of creatives: How do creatives position themselves against the changes and the use of the innovative technologies? How can the creatives be enabled to use these technologies, in an intended yet also unintended fashion? How can we stimulate peer-training and knowledge sharing? How can we influence the workfield to adopt these emerging technologies?","title":"why"},{"location":"#what","text":"research projects accessible knowledge gathering and sharing link with workfield dissemination of research results","title":"what"},{"location":"#get-in-touch","text":"mail us at polymath [at] luca-arts [dot] be for: interest researchprojects participation of or presenting a talk knowledge sharing","title":"get in touch"},{"location":"#socials","text":"","title":"socials"},{"location":"Polymath%20Lab/","text":"kunnen we een tekening maken 1. wat er allemaal gestoken wordt in polymath van finances? 2. wie komt allemaal naar polymath (en gewicht eraan geven) 3. wat komt er uit polymath lab 4. waar staan we momenteel en wat is een doel? denkoefening SDGs \u00b6 Call lanceren? ==> we hebben idee\u00ebn nodig van domeinexperten!! link Wat zou polymath binnen bepaalde topics van SDGs kunnen doen (hypothetische denkoefening), wat zou dat voor buitenwereld betekenen, wat voor LUCA intern? 1 \u00b6 Tegen 2030 de infrastructuur moderniseren en industrie\u00ebn aanpassen om hen duurzaam te maken, waarbij de focus ligt op een grotere doeltreffendheid bij het gebruik van hulpbronnen en van schonere en milieuvriendelijke technologie\u00ebn en industri\u00eble processen, waarbij alle landen de nodige actie ondernemen volgens hun eigen respectieve mogelijkheden Polystyreen vervangen door mycelium: - proces faciliteren door gebruik te maken van volumetric capturing van te verpakken objecten - hoe kunnen we die dan 'graven' uit een mycelium basisvorm? - nut LUCA: brand & packaging, traject 3D? - polymath: volumetric capturing flow naar CNC? - bedrijven die meerdere paketten willen versturen krijgen suggestie obv ingescande producten welke mycellium blokken te gebruiken en hoe te stapelen in een doos: minder polystyreen en gericht mycellium gebruiken - partners: - mycellium - verkooppunt zoals Bol.com 2 \u00b6 Tegen 2030 toegang voorzien tot veilige, betaalbare, toegankelijke en duurzame vervoerssystemen voor iedereen, waarbij de verkeersveiligheid verbeterd wordt, met name door het openbaar vervoer uit te breiden, met aandacht voor de behoeften van mensen in kwetsbare situaties, vrouwen, kinderen, personen met een handicap en ouderen 3 \u00b6 De inspanningen verhogen om het culturele en natuurlijke erfgoed van de wereld te beschermen en veilig te stellen 4 \u00b6 met welke tech kunnen we lokale duurzame initiatieven in kaart brengen/helpen? AI microphone om gender ongelijk gedrag op te pikken? 5 \u00b6 Tegen 2030 het aantal doden en getroffenen aanzienlijk verminderen en in aanzienlijke mate de rechtstreekse economische impact op het bruto binnenlands product terugschroeven dat veroorzaakt wordt door rampen, met inbegrip van rampen die met water verband houden, waarbij de klemtoon ligt op het beschermen van de armen en van mensen in kwetsbare situaties ==> waterrampen 6 \u00b6 Tegen 2030 de nadelige milieu-impact van steden per capita reduceren, ook door bijzondere aandacht te besteden aan de luchtkwaliteit en aan het gemeentelijk en ander afvalbeheer 7 \u00b6 Ontwikkelen en implementeren van instrumenten om de impact te monitoren van duurzame ontwikkeling op duurzaam toerisme dat werkgelegenheid cre\u00ebert en de plaatselijke cultuur en producten promoot 8 \u00b6 Klimaatactie: stikstofproblematiek: alles open gooien: infrastructuur, generatie van stikstof, ... ==> belangrijke voor Vlaanderen 9 \u00b6 Clean water: houtdok: veel E.Coli: https://www.kellogggarden.com/blog/gardening/plants-that-clean-water/ ==> architectuur voor infrastructuur te ontwerpen om water te geleiden doorheen de planten? researchGate Stilstaand water is een probleem, hoe kunnen we passief een systeem maken waardoor water w\u00e9l gaat stromen? Bodem kan vervuild zijn, hoe kunnen we die omwoelen/alle vuiligheid laten loskomen? 10 \u00b6 bevorderen en laagdrempelig maken van 'wat kan jij doen van bij je thuis?' ==> tech om biodiversiteit in kaart te brengen? ==> gekoppeld aan het geven van plannen om zelf gericht kasten te maken (CNC plannen + fablabs?) ==> ownership bij mensen kunnen leggen? genre: beehome ==> traject 3D kan bijdragen aan visueel vormgeven kasten ism domeinexperts (denk vleermuiskasten, bijenkasten, vogelnestjes, ...) ==> D4I ? ==> brand & packaging: hoe de juiste mensen overtuigen? 11 \u00b6 dienen we de lokale ecologie te behouden? Of aan te passen aan 'nieuwe' tijden?","title":"Polymath Lab"},{"location":"Polymath%20Lab/#denkoefening-sdgs","text":"Call lanceren? ==> we hebben idee\u00ebn nodig van domeinexperten!! link Wat zou polymath binnen bepaalde topics van SDGs kunnen doen (hypothetische denkoefening), wat zou dat voor buitenwereld betekenen, wat voor LUCA intern?","title":"denkoefening SDGs"},{"location":"Polymath%20Lab/#1","text":"Tegen 2030 de infrastructuur moderniseren en industrie\u00ebn aanpassen om hen duurzaam te maken, waarbij de focus ligt op een grotere doeltreffendheid bij het gebruik van hulpbronnen en van schonere en milieuvriendelijke technologie\u00ebn en industri\u00eble processen, waarbij alle landen de nodige actie ondernemen volgens hun eigen respectieve mogelijkheden Polystyreen vervangen door mycelium: - proces faciliteren door gebruik te maken van volumetric capturing van te verpakken objecten - hoe kunnen we die dan 'graven' uit een mycelium basisvorm? - nut LUCA: brand & packaging, traject 3D? - polymath: volumetric capturing flow naar CNC? - bedrijven die meerdere paketten willen versturen krijgen suggestie obv ingescande producten welke mycellium blokken te gebruiken en hoe te stapelen in een doos: minder polystyreen en gericht mycellium gebruiken - partners: - mycellium - verkooppunt zoals Bol.com","title":"1"},{"location":"Polymath%20Lab/#2","text":"Tegen 2030 toegang voorzien tot veilige, betaalbare, toegankelijke en duurzame vervoerssystemen voor iedereen, waarbij de verkeersveiligheid verbeterd wordt, met name door het openbaar vervoer uit te breiden, met aandacht voor de behoeften van mensen in kwetsbare situaties, vrouwen, kinderen, personen met een handicap en ouderen","title":"2"},{"location":"Polymath%20Lab/#3","text":"De inspanningen verhogen om het culturele en natuurlijke erfgoed van de wereld te beschermen en veilig te stellen","title":"3"},{"location":"Polymath%20Lab/#4","text":"met welke tech kunnen we lokale duurzame initiatieven in kaart brengen/helpen? AI microphone om gender ongelijk gedrag op te pikken?","title":"4"},{"location":"Polymath%20Lab/#5","text":"Tegen 2030 het aantal doden en getroffenen aanzienlijk verminderen en in aanzienlijke mate de rechtstreekse economische impact op het bruto binnenlands product terugschroeven dat veroorzaakt wordt door rampen, met inbegrip van rampen die met water verband houden, waarbij de klemtoon ligt op het beschermen van de armen en van mensen in kwetsbare situaties ==> waterrampen","title":"5"},{"location":"Polymath%20Lab/#6","text":"Tegen 2030 de nadelige milieu-impact van steden per capita reduceren, ook door bijzondere aandacht te besteden aan de luchtkwaliteit en aan het gemeentelijk en ander afvalbeheer","title":"6"},{"location":"Polymath%20Lab/#7","text":"Ontwikkelen en implementeren van instrumenten om de impact te monitoren van duurzame ontwikkeling op duurzaam toerisme dat werkgelegenheid cre\u00ebert en de plaatselijke cultuur en producten promoot","title":"7"},{"location":"Polymath%20Lab/#8","text":"Klimaatactie: stikstofproblematiek: alles open gooien: infrastructuur, generatie van stikstof, ... ==> belangrijke voor Vlaanderen","title":"8"},{"location":"Polymath%20Lab/#9","text":"Clean water: houtdok: veel E.Coli: https://www.kellogggarden.com/blog/gardening/plants-that-clean-water/ ==> architectuur voor infrastructuur te ontwerpen om water te geleiden doorheen de planten? researchGate Stilstaand water is een probleem, hoe kunnen we passief een systeem maken waardoor water w\u00e9l gaat stromen? Bodem kan vervuild zijn, hoe kunnen we die omwoelen/alle vuiligheid laten loskomen?","title":"9"},{"location":"Polymath%20Lab/#10","text":"bevorderen en laagdrempelig maken van 'wat kan jij doen van bij je thuis?' ==> tech om biodiversiteit in kaart te brengen? ==> gekoppeld aan het geven van plannen om zelf gericht kasten te maken (CNC plannen + fablabs?) ==> ownership bij mensen kunnen leggen? genre: beehome ==> traject 3D kan bijdragen aan visueel vormgeven kasten ism domeinexperts (denk vleermuiskasten, bijenkasten, vogelnestjes, ...) ==> D4I ? ==> brand & packaging: hoe de juiste mensen overtuigen?","title":"10"},{"location":"Polymath%20Lab/#11","text":"dienen we de lokale ecologie te behouden? Of aan te passen aan 'nieuwe' tijden?","title":"11"},{"location":"links/","text":"interesting links \u00b6 - watson - morgan trailer shows how IBM watson was used to create a trailer for the movie 'Morgan'. It shows that not the entire process is dominated by AI, yet that it is a tool to get there much faster. \u00b6","title":"interesting links"},{"location":"links/#interesting-links","text":"","title":"interesting links"},{"location":"links/#-watson-morgan-trailer-shows-how-ibm-watson-was-used-to-create-a-trailer-for-the-movie-morgan-it-shows-that-not-the-entire-process-is-dominated-by-ai-yet-that-it-is-a-tool-to-get-there-much-faster","text":"","title":"- watson - morgan trailer shows how IBM watson was used to create a trailer for the movie 'Morgan'. It shows that not the entire process is dominated by AI, yet that it is a tool to get there much faster."},{"location":"knowledge/media/","text":"Getting your research in Media \u00b6 Toon Verlinden (oa 'Weg van water', 'the floor is yours', kortingscode: floornl, flooren) the floor is yours belangrijk: - medium - nieuws waarden - publiek medium \u00b6 keuze van medium goed stellen: radio: secundaire media (niet doorspoelbaar, weinig keuze voor luisteraar) tv: beelden! kranten: boodschap! internet: al de rest nieuws waarden \u00b6 Omvang Gevolgen Beroemdheid Lokaal Dringend Human interest Fotografie: als het nieuws zaken oppikt over AI en angst bij mensen => human interest, gevolgen ==> proces aantonen Fake news: valse afbeeldingen: ahv AI ==> gevaren, maar ook nut doelpubliek \u00b6 Voor wie schrijf je? - Experts - mensen ge\u00efnteresseerd in wetenschap - algemeen publiek ==> moeilijker om interesse op te wekken Zoek gemeenschappelijk standpunt tussen je eigen onderzoek en wat de mensen willen horen. Hou rekening met 3 zaken voor je publiek: - wat weten ze al? - waar geven ze om? - welk jargon gebruiken ze? - wnn moeilijk woord?? als je het in kop van artikel kan zetten is het geen jargon (bijvoorbeeld DNA: ok, RNA: moeilijker) oefening: noteer publiek, medium, nieuwswaarden \u00b6 topic: Narafi fotografie: puur fotografie publiek: experts (fotografen die lookbook maken) blogpost waarden: beroemdheid: bekend persoon in shoot tonen gevolgen: financieel & tijd AI: wat kan het betekenen in de toekomst? publiek: algemeen krant: indien er weer over fake news gesproken wordt, oplinken aan wat hoe binnen geraken bij media? \u00b6 bijvoorbeeld de Morgen: volgen wie wat schrijft. Contacteer de schrijver voornaam.achternaam@demorgen.be opinieredacties contacteren: meteen opinie meegeven en argumentatie waarom het zinvol is. je verhaal maken \u00b6 hoofdboodschap \u00b6 zorg ervoor dat die duidelijk is, herhaal die veel . Jij moet ervoor zorgen dat een journalist met je boodschap naar huis gaat, het is eerder jouw fout als de boodschap verkeert verteld wordt. Enkele technieken: 1. plant een vlag 'dit is de belangrijkste boodschap, wat je hiervan moet onthouden is, ' 2. Leg een link: 'zoals dit aantoont' en dan refereer je weer naar je hoofdboodschap 3. herhalen! Doel : E\u00e9n zin. Zonder jargon. bijv. In tijden van Artificiele intelligentie blijft de ambacht overeind. Structuur \u00b6 Belangrijk: journalisten moeten intern ook hun verhaal verkopen! Journalisten starten met de hoofdboodschap en kunnen dan uitweiden naar details indien nog ruimte over. Dus: begin met hoofdboodschap (prio 1), dan geef je prio 2, dan ... (wat kan je toevoegen aan het verhaal dat van meerwaarde is). Combineer je hoofdboodschap met een verhaal, een interessant feit, vraag + WOW-factor kill your darlings: maak lijst van topics in aparte tekst, dan zijn ze niet weg, maar wel uit je hoofdtekst. Krijg het naar buiten \u00b6 jij contacteert hen korte termijn winst Hoe? Opiniestukken Schrijf voor magazine/blog (bijvoorbeeld EOS blog, daarna magazine) Persberichten Specifieke journalist zij contacteren jou Lange termijn winst Hoe? Neem deel aan evenementen bijv wetenschapsbattle (oa Hetty Helsmoortel) sciencefiguredout.be expertendatabank Kom zelf naar buiten Martijn Peters: zelf vlog gestart contacteer eigen dienst (LUCA)","title":"Getting your research in Media"},{"location":"knowledge/media/#getting-your-research-in-media","text":"Toon Verlinden (oa 'Weg van water', 'the floor is yours', kortingscode: floornl, flooren) the floor is yours belangrijk: - medium - nieuws waarden - publiek","title":"Getting your research in Media"},{"location":"knowledge/media/#medium","text":"keuze van medium goed stellen: radio: secundaire media (niet doorspoelbaar, weinig keuze voor luisteraar) tv: beelden! kranten: boodschap! internet: al de rest","title":"medium"},{"location":"knowledge/media/#nieuws-waarden","text":"Omvang Gevolgen Beroemdheid Lokaal Dringend Human interest Fotografie: als het nieuws zaken oppikt over AI en angst bij mensen => human interest, gevolgen ==> proces aantonen Fake news: valse afbeeldingen: ahv AI ==> gevaren, maar ook nut","title":"nieuws waarden"},{"location":"knowledge/media/#doelpubliek","text":"Voor wie schrijf je? - Experts - mensen ge\u00efnteresseerd in wetenschap - algemeen publiek ==> moeilijker om interesse op te wekken Zoek gemeenschappelijk standpunt tussen je eigen onderzoek en wat de mensen willen horen. Hou rekening met 3 zaken voor je publiek: - wat weten ze al? - waar geven ze om? - welk jargon gebruiken ze? - wnn moeilijk woord?? als je het in kop van artikel kan zetten is het geen jargon (bijvoorbeeld DNA: ok, RNA: moeilijker)","title":"doelpubliek"},{"location":"knowledge/media/#oefening-noteer-publiek-medium-nieuwswaarden","text":"topic: Narafi fotografie: puur fotografie publiek: experts (fotografen die lookbook maken) blogpost waarden: beroemdheid: bekend persoon in shoot tonen gevolgen: financieel & tijd AI: wat kan het betekenen in de toekomst? publiek: algemeen krant: indien er weer over fake news gesproken wordt, oplinken aan wat","title":"oefening: noteer publiek, medium, nieuwswaarden"},{"location":"knowledge/media/#hoe-binnen-geraken-bij-media","text":"bijvoorbeeld de Morgen: volgen wie wat schrijft. Contacteer de schrijver voornaam.achternaam@demorgen.be opinieredacties contacteren: meteen opinie meegeven en argumentatie waarom het zinvol is.","title":"hoe binnen geraken bij media?"},{"location":"knowledge/media/#je-verhaal-maken","text":"","title":"je verhaal maken"},{"location":"knowledge/media/#hoofdboodschap","text":"zorg ervoor dat die duidelijk is, herhaal die veel . Jij moet ervoor zorgen dat een journalist met je boodschap naar huis gaat, het is eerder jouw fout als de boodschap verkeert verteld wordt. Enkele technieken: 1. plant een vlag 'dit is de belangrijkste boodschap, wat je hiervan moet onthouden is, ' 2. Leg een link: 'zoals dit aantoont' en dan refereer je weer naar je hoofdboodschap 3. herhalen! Doel : E\u00e9n zin. Zonder jargon. bijv. In tijden van Artificiele intelligentie blijft de ambacht overeind.","title":"hoofdboodschap"},{"location":"knowledge/media/#structuur","text":"Belangrijk: journalisten moeten intern ook hun verhaal verkopen! Journalisten starten met de hoofdboodschap en kunnen dan uitweiden naar details indien nog ruimte over. Dus: begin met hoofdboodschap (prio 1), dan geef je prio 2, dan ... (wat kan je toevoegen aan het verhaal dat van meerwaarde is). Combineer je hoofdboodschap met een verhaal, een interessant feit, vraag + WOW-factor kill your darlings: maak lijst van topics in aparte tekst, dan zijn ze niet weg, maar wel uit je hoofdtekst.","title":"Structuur"},{"location":"knowledge/media/#krijg-het-naar-buiten","text":"jij contacteert hen korte termijn winst Hoe? Opiniestukken Schrijf voor magazine/blog (bijvoorbeeld EOS blog, daarna magazine) Persberichten Specifieke journalist zij contacteren jou Lange termijn winst Hoe? Neem deel aan evenementen bijv wetenschapsbattle (oa Hetty Helsmoortel) sciencefiguredout.be expertendatabank Kom zelf naar buiten Martijn Peters: zelf vlog gestart contacteer eigen dienst (LUCA)","title":"Krijg het naar buiten"},{"location":"knowledge/AI/GPT-3/","tags":["NLP","AI","GPT-3","Google"],"text":"GPT-3 \u00b6 openAI API different models for: text completion semantic search text generation question answering classification summarize difficult text for a 2nd grader ... Some cool examples","title":"GPT-3"},{"location":"knowledge/AI/GPT-3/#gpt-3","text":"openAI API different models for: text completion semantic search text generation question answering classification summarize difficult text for a 2nd grader ... Some cool examples","title":"GPT-3"},{"location":"knowledge/AI/General%20remarks/","text":"general \u00b6 tensorflow certificate cheatsheet","title":"general"},{"location":"knowledge/AI/General%20remarks/#general","text":"tensorflow certificate cheatsheet","title":"general"},{"location":"knowledge/AI/Img2prompt/","text":"link to git Very interesting tool to start gathering prompts for getting familiar with a certain style. E.g. you search images which have a certain feeling or style you like. Get to know them via prompts and get an overview of which prompts are common and can help you with the generation and definition of new content.","title":"Img2prompt"},{"location":"knowledge/AI/Model%20playgrounds/","text":"TIMM models hugging face transformers","title":"Model playgrounds"},{"location":"knowledge/AI/background/","text":"list of AI tools AI explained","title":"Background"},{"location":"knowledge/AI/containers_for_ml/","text":"Cog: containers for machine learning \u00b6 looks like an interesting git repo to package and deploy ML models in docker and be able to serve them: cog","title":"Cog: containers for machine learning"},{"location":"knowledge/AI/containers_for_ml/#cog-containers-for-machine-learning","text":"looks like an interesting git repo to package and deploy ML models in docker and be able to serve them: cog","title":"Cog: containers for machine learning"},{"location":"knowledge/AI/instant%20Nerf/","text":"instant nerf should be able to make a 3D mesh from some images. instant-ngp link installation \u00b6 colmap \u00b6 you need colmap installed with CUDA support: installation link . I'm on linux so I have to compile from source as noted to have CUDA support. issues \u00b6 On my ZBook Fury I noticed I got a cc1plus errorr while running make -j . This is probably due to having too much processes running in parallel. To test I went for make -j4 . I got an error at the end of make process, something with an undefined reference to LIBTIFF. I had to deinstall libtiff via conda: conda uninstall libtiff . instant-ngp \u00b6 issues \u00b6 I had to install qt5-qmake (perhaps this was for colmap?): sudo apt-get install qt5-qmake","title":"instant Nerf"},{"location":"knowledge/AI/instant%20Nerf/#installation","text":"","title":"installation"},{"location":"knowledge/AI/instant%20Nerf/#colmap","text":"you need colmap installed with CUDA support: installation link . I'm on linux so I have to compile from source as noted to have CUDA support.","title":"colmap"},{"location":"knowledge/AI/instant%20Nerf/#issues","text":"On my ZBook Fury I noticed I got a cc1plus errorr while running make -j . This is probably due to having too much processes running in parallel. To test I went for make -j4 . I got an error at the end of make process, something with an undefined reference to LIBTIFF. I had to deinstall libtiff via conda: conda uninstall libtiff .","title":"issues"},{"location":"knowledge/AI/instant%20Nerf/#instant-ngp","text":"","title":"instant-ngp"},{"location":"knowledge/AI/instant%20Nerf/#issues_1","text":"I had to install qt5-qmake (perhaps this was for colmap?): sudo apt-get install qt5-qmake","title":"issues"},{"location":"knowledge/AI/prompt%20building/","text":"","title":"Prompt building"},{"location":"knowledge/hacking/hacking/","text":"hacking \u00b6 interesting links \u00b6 overview of hackingtool","title":"hacking"},{"location":"knowledge/hacking/hacking/#hacking","text":"","title":"hacking"},{"location":"knowledge/hacking/hacking/#interesting-links","text":"overview of hackingtool","title":"interesting links"},{"location":"knowledge/random/eigenquestions%20the%20art%20of%20framing%20problems/","text":"eigenquestions \u00b6 link Basically: creating the right frame, the right way, gives a path to clearer and more supported decision making. Could be useful for polymath to position ourselves.","title":"eigenquestions"},{"location":"knowledge/random/eigenquestions%20the%20art%20of%20framing%20problems/#eigenquestions","text":"link Basically: creating the right frame, the right way, gives a path to clearer and more supported decision making. Could be useful for polymath to position ourselves.","title":"eigenquestions"},{"location":"knowledge/software/links/","text":"Links \u00b6 things every programmer should know","title":"Links"},{"location":"knowledge/software/links/#links","text":"things every programmer should know","title":"Links"},{"location":"knowledge/web3_0/Mastodon/","tags":["twitter","mastodon","open-source","web3_0"],"text":"social distributed network \u00b6 https://joinmastodon.org Alternative to #twitter","title":"social distributed network"},{"location":"knowledge/web3_0/Mastodon/#social-distributed-network","text":"https://joinmastodon.org Alternative to #twitter","title":"social distributed network"},{"location":"projects/projects/","text":"project overview \u00b6 extern \u00b6 AddAttachment measuring trust in parent-child relations VR #biometrics #unity #HCI #open-source \u00b6 intern \u00b6 FilmEU XRLAB intern PRO \u00b6 PWO Narafi how can a photographer make use of machine learning to: stimulate creativity lessen labor intensive work4 AI #photo #open-source \u00b6 PWO Audio Mocap inter AC \u00b6 residenties Nicolas Provost Matthijs De Block","title":"project overview"},{"location":"projects/projects/#project-overview","text":"","title":"project overview"},{"location":"projects/projects/#extern","text":"AddAttachment measuring trust in parent-child relations","title":"extern"},{"location":"projects/projects/#vr-biometrics-unity-hci-open-source","text":"","title":"VR #biometrics #unity #HCI #open-source"},{"location":"projects/projects/#intern","text":"FilmEU XRLAB","title":"intern"},{"location":"projects/projects/#intern-pro","text":"PWO Narafi how can a photographer make use of machine learning to: stimulate creativity lessen labor intensive work4","title":"intern PRO"},{"location":"projects/projects/#ai-photo-open-source","text":"PWO Audio Mocap","title":"AI #photo #open-source"},{"location":"projects/projects/#inter-ac","text":"residenties Nicolas Provost Matthijs De Block","title":"inter AC"},{"location":"projects/dig_transformatie_22/relanceplan%20digitale%20transformatie/","text":"emma vandevelde ==> dept cultuur jeugd media, focus media ontwikkelingsprojecten met kort implementatietraject (2-3 jaar) doelgroep oa Onderzoeksgroepen media nieuwe innovatieve tools/diensten. thema's: 1. verbeteren vindbaarheid/zichtbaarheid vlaamse mediacontent 2. slimme tech en dig tools om effici\u00ebntie/kwaliteit mediaproductie, opslag, distributie en waardecreatie te verhogen 3. mediaplatformen en tools van de toekomst (kijken, luisteren, lezen) budget: klein: 150.000 - 499.999 ==> 75% financiering overheid : totaalbudget 3.000.000 groot: 500.000 - 1.500.500 ==> 50% financiering overheid: totaalbudget 8.000.000 personeelskosten, werkingskosten, ontwikkelingskosten overhead max 15% opletten : enkel eerste versie indiening telt in het systeem! Voelt de vlaamse mediagebruiker een meerwaarde door dit project? vragen: oproepenmedia@vlaanderen.be jury: nog niet vastgelegd budget van projecten verkleinen wordt niet geprefereerd, eerder wordt het aantal goedgekeurde projecten verkleind; geen mondeling contact tussen jury en aanvragers, alles gebeurd obv indieningsdoc hopen op 7-8 kleinschalige projecten richten op 10 of iets meer grootschalige projecten artistieke residentieformaat in hogeschool ==> microlearningformaat ==> data-art award stad gent: kan gent een speler worden obv data-arts award ritcs? ==> research AI / audiovisual artevelde/hogent ==> AI opleiding? opleiding audiovisueel AI integreren? in een lab? crew ==> AI call sentiant being inthepocket? nog spelers?hogent STARTS toolkit: ideale residentieformat? gelinkt aan wat ik nu doe? iedere residentie ander samenwerkingsverband is data + AI de formule waarin we ons willen presenteren? deepfake video kan onderdeel zijn maar geen umbrella oproep kuleuven infrastructuur doel: one-pager, kleinschalig project bedrijven? onderzoekers?","title":"Relanceplan digitale transformatie"},{"location":"projects/the_dreams_of_polymath/Concept/","text":"The target of the different concepts is to indicate hypothetical projects within LUCA where Polymath places a crucial role. First thing is to have a short slideware of the story of each concept. We use this as a starter for a brainstorm session: - how does the concept link with LUCA? - can we enable students? - how? - can we enable teachers? - how? - what do we research specific in each concept, what could be the return for future designers? - how are we going to fund this? this way we're trying to get: - more acquainted and known in the LUCA environment - a buy-in of LUCA people in future projects - a better definition of what Polymath could be within LUCA and outer reach! - this way we can start to promote ourselves elsewhere? smoelshapen \u00b6 We'll be planning a meeting with some interesting profiles @ LUCA. What do we expect as outcome of this meeting? Initial thoughts on Polymath \"Letter of intent\" to further participate? What do we expect to find in the end of multiple meetings? Network Sales pitch ==> fixed with some slides Insights on how future projects can involve teachers","title":"Concept"},{"location":"projects/the_dreams_of_polymath/Concept/#smoelshapen","text":"We'll be planning a meeting with some interesting profiles @ LUCA. What do we expect as outcome of this meeting? Initial thoughts on Polymath \"Letter of intent\" to further participate? What do we expect to find in the end of multiple meetings? Network Sales pitch ==> fixed with some slides Insights on how future projects can involve teachers","title":"smoelshapen"},{"location":"projects/the_dreams_of_polymath/Concept_1_drought/","text":"Drought \u00b6 droogte, waterschaarste, het is een (pun intended) hot topic. Ofwel is er water teveel (Walloni\u00eb) om te verwerken, ofwel staat Vlaanderen droog. Het gebruik van water, door individuen en door bedrijven willen we aankaarten. In het drooglegging project worden de watertekorten en overschotten in kaart gebracht. Om mensen bewust te maken van de invloed van hun gedrag en keuzes op het teveel/tekort aan water bij hun, staat LUCA in voor het dissemineren van de onderzoeksresultaten en bewustvorming bij het belgische publiek. We willen niet mensen op de vingers tikken, maar wel ervoor zorgen dat zoveel mogelijk mensen zich bewust zijn van hun invloed op water. LUCA polymath maakt gebruik van nieuwe technologie\u00ebn om de storytelling te ondersteunen en de impact te vergroten op het doelpubliek. Zo genereren we (middels AI) utopische en dystopische beelden van mensen hun eigen omgeving om het publiek bewust te maken, maken we affiches van populaire vliegbestemmingen die afzien door het veranderende klimaat. We genereren unieke varianten van hetzelfde verhaal door middel van AI. Studio Reclame denkt mee na, in samenwerking met AI, over slogans die aansluiten bij verschillende personas (denk de vlaming wiens grasperk perfect groen blijft bij een hittegolf, tot de stedeling die massa's advocado's eet, tot de impact van het bedrijf een beetje verderop).","title":"Drought"},{"location":"projects/the_dreams_of_polymath/Concept_1_drought/#drought","text":"droogte, waterschaarste, het is een (pun intended) hot topic. Ofwel is er water teveel (Walloni\u00eb) om te verwerken, ofwel staat Vlaanderen droog. Het gebruik van water, door individuen en door bedrijven willen we aankaarten. In het drooglegging project worden de watertekorten en overschotten in kaart gebracht. Om mensen bewust te maken van de invloed van hun gedrag en keuzes op het teveel/tekort aan water bij hun, staat LUCA in voor het dissemineren van de onderzoeksresultaten en bewustvorming bij het belgische publiek. We willen niet mensen op de vingers tikken, maar wel ervoor zorgen dat zoveel mogelijk mensen zich bewust zijn van hun invloed op water. LUCA polymath maakt gebruik van nieuwe technologie\u00ebn om de storytelling te ondersteunen en de impact te vergroten op het doelpubliek. Zo genereren we (middels AI) utopische en dystopische beelden van mensen hun eigen omgeving om het publiek bewust te maken, maken we affiches van populaire vliegbestemmingen die afzien door het veranderende klimaat. We genereren unieke varianten van hetzelfde verhaal door middel van AI. Studio Reclame denkt mee na, in samenwerking met AI, over slogans die aansluiten bij verschillende personas (denk de vlaming wiens grasperk perfect groen blijft bij een hittegolf, tot de stedeling die massa's advocado's eet, tot de impact van het bedrijf een beetje verderop).","title":"Drought"},{"location":"projects/the_dreams_of_polymath/Concept_2_change_enabling/","text":"critical mass verzamelen dmv huidige tech (facebook, instagram, tiktok, ...) => studio reclame die massa analyseren en kijken hoe hun leven aan te passen is naar het doel (bijv minder plastiek gebruiken of andere SDGs) de massa aanzetten tot change en deze ook laten uitdragen de massa wordt een beweging de beweging inzetten als juridische kracht verandering realiseren uit de SDGs, welke tools hebben we ter beschikking voor deze verandering te bereiken. CECS c hange e nabling c oncept s , cecs sells. we excel and we sell cecs.","title":"Concept 2 change enabling"},{"location":"projects/the_dreams_of_polymath/Drafts/","text":"societal and ecological changes ==> how to tackle these? Combine with technological changes Societal: - energy prices and dependency of energy - onbegrip waarom sommige energiekeuzes gemaakt worden Ecological: - klimaatsverandering: zowel zichtbaar als onzichtbaar - mensen willen wel iets doen maar wat is niet altijd duidelijk - community of change? - kunnen we in kaart brengen waar er onthard kan worden en hoe dit er uit zou zien? - ==> mensen aan boord krijgen -","title":"Drafts"},{"location":"projects/the_dreams_of_polymath/bruggen%20als%20waterfilters/","text":"iedere brug over water heeft een dubbele functie: passage van vervoer over de brug, passage van boten onder de brug. Maar er is nog een derde transport: het water zelf. Problemen in de stad: te weinig groen, te weinig ecodiversiteit, water is van slechte kwaliteit op verschillende plaatsen. Laten we de bruggen en sluizen aanpassen en als groenfilters gebruiken om deze problemen te faciliteren. Niet enkel de directe gevolgen zijn van belang, zeker ook het indirecte gevolg van de publieke awareness is een hoofddoel.","title":"Bruggen als waterfilters"},{"location":"slides/critical_diffusion/text/","text":"text to vector to text to image \u00b6 training data \u00b6 lot's of data laion-5b dataset 5.85 billion image-text pairs. train the entire model? a hard drive of 240TB 32 x 8 x A100 GPUs cost: approx $ 600,000 carbon cost: 11,250 kg CO2 = \u00b1 2.5 cars driving 15,000 km/year note: if you rent a special PC with massive specs it will still take over a week to just download the data training on data \u00b6 the latent space, a gut-feeling approach: model ==> encoding (a vector/coordinate): src latent space: cats and dogs \u00b6 note: dichtheid op landkaart = vectoren die dicht liggen bij elkaar ==> afbeeldingen die veel gelijkenis vertonen enter LEXICA.art ==> zoeken naar LAIKA in space latent space: cats and dogs \u00b6 latent space: cats and dogs \u00b6 note: our AI encoder gave us a sequence of numbers, so we can position the dog on the landmap latent space: cats and dogs \u00b6 latent space: cats and dogs \u00b6 latent space: cats and dogs \u00b6 latent space: cats and dogs \u00b6 latent space: cats and dogs \u00b6 latent space: cats and dogs \u00b6 latent space: cats and dogs \u00b6 latent space: cats and dogs \u00b6 latent space: cats and dogs \u00b6 latent space: IN BETWEEN cats and dogs \u00b6 Different diffusion AI models \u00b6 DALL-E2 MidJourney Stable Diffusion ...","title":"Text"},{"location":"slides/critical_diffusion/text/#text-to-vector-to-text-to-image","text":"","title":"text to vector to text to image"},{"location":"slides/critical_diffusion/text/#training-data","text":"lot's of data laion-5b dataset 5.85 billion image-text pairs. train the entire model? a hard drive of 240TB 32 x 8 x A100 GPUs cost: approx $ 600,000 carbon cost: 11,250 kg CO2 = \u00b1 2.5 cars driving 15,000 km/year note: if you rent a special PC with massive specs it will still take over a week to just download the data","title":"training data"},{"location":"slides/critical_diffusion/text/#training-on-data","text":"the latent space, a gut-feeling approach: model ==> encoding (a vector/coordinate): src","title":"training on data"},{"location":"slides/critical_diffusion/text/#latent-space-cats-and-dogs","text":"note: dichtheid op landkaart = vectoren die dicht liggen bij elkaar ==> afbeeldingen die veel gelijkenis vertonen enter LEXICA.art ==> zoeken naar LAIKA in space","title":"latent space: cats and dogs"},{"location":"slides/critical_diffusion/text/#latent-space-cats-and-dogs_1","text":"","title":"latent space: cats and dogs"},{"location":"slides/critical_diffusion/text/#latent-space-cats-and-dogs_2","text":"note: our AI encoder gave us a sequence of numbers, so we can position the dog on the landmap","title":"latent space: cats and dogs"},{"location":"slides/critical_diffusion/text/#latent-space-cats-and-dogs_3","text":"","title":"latent space: cats and dogs"},{"location":"slides/critical_diffusion/text/#latent-space-cats-and-dogs_4","text":"","title":"latent space: cats and dogs"},{"location":"slides/critical_diffusion/text/#latent-space-cats-and-dogs_5","text":"","title":"latent space: cats and dogs"},{"location":"slides/critical_diffusion/text/#latent-space-cats-and-dogs_6","text":"","title":"latent space: cats and dogs"},{"location":"slides/critical_diffusion/text/#latent-space-cats-and-dogs_7","text":"","title":"latent space: cats and dogs"},{"location":"slides/critical_diffusion/text/#latent-space-cats-and-dogs_8","text":"","title":"latent space: cats and dogs"},{"location":"slides/critical_diffusion/text/#latent-space-cats-and-dogs_9","text":"","title":"latent space: cats and dogs"},{"location":"slides/critical_diffusion/text/#latent-space-cats-and-dogs_10","text":"","title":"latent space: cats and dogs"},{"location":"slides/critical_diffusion/text/#latent-space-cats-and-dogs_11","text":"","title":"latent space: cats and dogs"},{"location":"slides/critical_diffusion/text/#latent-space-in-between-cats-and-dogs","text":"","title":"latent space: IN BETWEEN cats and dogs"},{"location":"slides/critical_diffusion/text/#different-diffusion-ai-models","text":"DALL-E2 MidJourney Stable Diffusion ...","title":"Different diffusion AI models"},{"location":"slides/test/text/","text":"text to vector to text to image \u00b6 training data \u00b6 lot's of data laion-5b dataset 5.85 billion image-text pairs. train the entire model? a hard drive of 240TB 32 x 8 x A100 GPUs cost: approx $ 600,000 carbon cost: 11,250 kg CO2 = \u00b1 2.5 cars driving 15,000 km/year note: if you rent a special PC with massive specs it will still take over a week to just download the data training on data \u00b6 the latent space, a gut-feeling approach: model ==> encoding (a vector/coordinate): src latent space: cats and dogs \u00b6 note: dichtheid op landkaart = vectoren die dicht liggen bij elkaar ==> afbeeldingen die veel gelijkenis vertonen enter LEXICA.art ==> zoeken naar LAIKA in space latent space: cats and dogs \u00b6 latent space: cats and dogs \u00b6 note: our AI encoder gave us a sequence of numbers, so we can position the dog on the landmap latent space: cats and dogs \u00b6 latent space: cats and dogs \u00b6 latent space: cats and dogs \u00b6 latent space: cats and dogs \u00b6 latent space: cats and dogs \u00b6 latent space: cats and dogs \u00b6 latent space: cats and dogs \u00b6 latent space: cats and dogs \u00b6 latent space: cats and dogs \u00b6 latent space: IN BETWEEN cats and dogs \u00b6 Different diffusion AI models \u00b6 DALL-E2 MidJourney Stable Diffusion ...","title":"Text"},{"location":"slides/test/text/#text-to-vector-to-text-to-image","text":"","title":"text to vector to text to image"},{"location":"slides/test/text/#training-data","text":"lot's of data laion-5b dataset 5.85 billion image-text pairs. train the entire model? a hard drive of 240TB 32 x 8 x A100 GPUs cost: approx $ 600,000 carbon cost: 11,250 kg CO2 = \u00b1 2.5 cars driving 15,000 km/year note: if you rent a special PC with massive specs it will still take over a week to just download the data","title":"training data"},{"location":"slides/test/text/#training-on-data","text":"the latent space, a gut-feeling approach: model ==> encoding (a vector/coordinate): src","title":"training on data"},{"location":"slides/test/text/#latent-space-cats-and-dogs","text":"note: dichtheid op landkaart = vectoren die dicht liggen bij elkaar ==> afbeeldingen die veel gelijkenis vertonen enter LEXICA.art ==> zoeken naar LAIKA in space","title":"latent space: cats and dogs"},{"location":"slides/test/text/#latent-space-cats-and-dogs_1","text":"","title":"latent space: cats and dogs"},{"location":"slides/test/text/#latent-space-cats-and-dogs_2","text":"note: our AI encoder gave us a sequence of numbers, so we can position the dog on the landmap","title":"latent space: cats and dogs"},{"location":"slides/test/text/#latent-space-cats-and-dogs_3","text":"","title":"latent space: cats and dogs"},{"location":"slides/test/text/#latent-space-cats-and-dogs_4","text":"","title":"latent space: cats and dogs"},{"location":"slides/test/text/#latent-space-cats-and-dogs_5","text":"","title":"latent space: cats and dogs"},{"location":"slides/test/text/#latent-space-cats-and-dogs_6","text":"","title":"latent space: cats and dogs"},{"location":"slides/test/text/#latent-space-cats-and-dogs_7","text":"","title":"latent space: cats and dogs"},{"location":"slides/test/text/#latent-space-cats-and-dogs_8","text":"","title":"latent space: cats and dogs"},{"location":"slides/test/text/#latent-space-cats-and-dogs_9","text":"","title":"latent space: cats and dogs"},{"location":"slides/test/text/#latent-space-cats-and-dogs_10","text":"","title":"latent space: cats and dogs"},{"location":"slides/test/text/#latent-space-cats-and-dogs_11","text":"","title":"latent space: cats and dogs"},{"location":"slides/test/text/#latent-space-in-between-cats-and-dogs","text":"","title":"latent space: IN BETWEEN cats and dogs"},{"location":"slides/test/text/#different-diffusion-ai-models","text":"DALL-E2 MidJourney Stable Diffusion ...","title":"Different diffusion AI models"},{"location":"slides/test/node_modules/reveal.js/","text":"reveal.js \u00b6 A framework for easily creating beautiful presentations using HTML. Check out the live demo . reveal.js comes with a broad range of features including nested slides , Markdown support , PDF export , speaker notes and a JavaScript API . There's also a fully featured visual editor and platform for sharing reveal.js presentations at slides.com . Supporting reveal.js \u00b6 This project was started and is maintained by @hakimel with the help of many contributions from the community . The best way to support the project is to become a paying member of Slides.com \u2014the reveal.js presentation platform that Hakim is building. Table of contents \u00b6 Online Editor Installation Basic setup Full setup Folder Structure Instructions Markup Markdown Element Attributes Slide Attributes Configuration Presentation Size Dependencies Ready Event Auto-sliding Keyboard Bindings Vertical Slide Navigation Touch Navigation Lazy Loading API Custom Key Bindings Slide Changed Event Presentation State Slide States Slide Backgrounds Parallax Background Slide Transitions Internal links Fragments Fragment events Code syntax highlighting Slide number Overview mode Fullscreen mode Embedded media Stretching elements Resize Event postMessage API PDF Export Theming Speaker Notes Share and Print Speaker Notes Server Side Speaker Notes Plugins Multiplexing Master presentation Client presentation Socket.io server MathJax License More reading \u00b6 Changelog : Up-to-date version history. Examples : Presentations created with reveal.js, add your own! Browser Support : Explanation of browser support and fallbacks. Plugins : A list of plugins that can be used to extend reveal.js. Online Editor \u00b6 Presentations are written using HTML or Markdown but there's also an online editor for those of you who prefer a graphical interface. Give it a try at https://slides.com . Installation \u00b6 The basic setup is for authoring presentations only. The full setup gives you access to all reveal.js features and plugins such as speaker notes as well as the development tasks needed to make changes to the source. Basic setup \u00b6 The core of reveal.js is very easy to install. You'll simply need to download a copy of this repository and open the index.html file directly in your browser. Download the latest version of reveal.js from https://github.com/hakimel/reveal.js/releases Unzip and replace the example contents in index.html with your own Open index.html in a browser to view it Full setup \u00b6 Some reveal.js features, like external Markdown and speaker notes, require that presentations run from a local web server. The following instructions will set up such a server as well as all of the development tasks needed to make edits to the reveal.js source code. Install Node.js (9.0.0 or later) Clone the reveal.js repository sh $ git clone https://github.com/hakimel/reveal.js.git Navigate to the reveal.js folder sh $ cd reveal.js Install dependencies sh $ npm install Serve the presentation and monitor source files for changes sh $ npm start Open http://localhost:8000 to view your presentation You can change the port by using npm start -- --port=8001 . Folder Structure \u00b6 css/ Core styles without which the project does not function js/ Like above but for JavaScript plugin/ Components that have been developed as extensions to reveal.js lib/ All other third party assets (JavaScript, CSS, fonts) Instructions \u00b6 Markup \u00b6 Here's a barebones example of a fully working reveal.js presentation: <html> <head> <link rel=\"stylesheet\" href=\"css/reveal.css\"> <link rel=\"stylesheet\" href=\"css/theme/white.css\"> </head> <body> <div class=\"reveal\"> <div class=\"slides\"> <section>Slide 1</section> <section>Slide 2</section> </div> </div> <script src=\"js/reveal.js\"></script> <script> Reveal.initialize(); </script> </body> </html> The presentation markup hierarchy needs to be .reveal > .slides > section where the section represents one slide and can be repeated indefinitely. If you place multiple section elements inside of another section they will be shown as vertical slides. The first of the vertical slides is the \"root\" of the others (at the top), and will be included in the horizontal sequence. For example: <div class=\"reveal\"> <div class=\"slides\"> <section>Single Horizontal Slide</section> <section> <section>Vertical Slide 1</section> <section>Vertical Slide 2</section> </section> </div> </div> Markdown \u00b6 It's possible to write your slides using Markdown. To enable Markdown, add the data-markdown attribute to your <section> elements and wrap the contents in a <textarea data-template> like the example below. You'll also need to add the plugin/markdown/marked.js and plugin/markdown/markdown.js scripts (in that order) to your HTML file. This is based on data-markdown from Paul Irish modified to use marked to support GitHub Flavored Markdown . Sensitive to indentation (avoid mixing tabs and spaces) and line breaks (avoid consecutive breaks). <section data-markdown> <textarea data-template> ## Page title A paragraph with some text and a [link](http://hakim.se). </textarea> </section> External Markdown \u00b6 You can write your content as a separate file and have reveal.js load it at runtime. Note the separator arguments which determine how slides are delimited in the external file: the data-separator attribute defines a regular expression for horizontal slides (defaults to ^\\r?\\n---\\r?\\n$ , a newline-bounded horizontal rule) and data-separator-vertical defines vertical slides (disabled by default). The data-separator-notes attribute is a regular expression for specifying the beginning of the current slide's speaker notes (defaults to notes?: , so it will match both \"note:\" and \"notes:\"). The data-charset attribute is optional and specifies which charset to use when loading the external file. When used locally, this feature requires that reveal.js runs from a local web server . The following example customises all available options: <section data-markdown=\"example.md\" data-separator=\"^\\n\\n\\n\" data-separator-vertical=\"^\\n\\n\" data-separator-notes=\"^Note:\" data-charset=\"iso-8859-15\"> <!-- Note that Windows uses `\\r\\n` instead of `\\n` as its linefeed character. For a regex that supports all operating systems, use `\\r?\\n` instead of `\\n`. --> </section> Element Attributes \u00b6 Special syntax (through HTML comments) is available for adding attributes to Markdown elements. This is useful for fragments, amongst other things. <section data-markdown> <script type=\"text/template\"> - Item 1 <!-- .element: class=\"fragment\" data-fragment-index=\"2\" --> - Item 2 <!-- .element: class=\"fragment\" data-fragment-index=\"1\" --> </script> </section> Slide Attributes \u00b6 Special syntax (through HTML comments) is available for adding attributes to the slide <section> elements generated by your Markdown. <section data-markdown> <script type=\"text/template\"> <!-- .slide: data-background=\"#ff0000\" --> Markdown content </script> </section> Configuring marked \u00b6 We use marked to parse Markdown. To customise marked's rendering, you can pass in options when configuring Reveal : Reveal.initialize({ // Options which are passed into marked // See https://marked.js.org/#/USING_ADVANCED.md#options markdown: { smartypants: true } }); Configuration \u00b6 At the end of your page you need to initialize reveal by running the following code. Note that all configuration values are optional and will default to the values specified below. Reveal.initialize({ // Display presentation control arrows controls: true, // Help the user learn the controls by providing hints, for example by // bouncing the down arrow when they first encounter a vertical slide controlsTutorial: true, // Determines where controls appear, \"edges\" or \"bottom-right\" controlsLayout: 'bottom-right', // Visibility rule for backwards navigation arrows; \"faded\", \"hidden\" // or \"visible\" controlsBackArrows: 'faded', // Display a presentation progress bar progress: true, // Display the page number of the current slide slideNumber: false, // Add the current slide number to the URL hash so that reloading the // page/copying the URL will return you to the same slide hash: false, // Push each slide change to the browser history. Implies `hash: true` history: false, // Enable keyboard shortcuts for navigation keyboard: true, // Enable the slide overview mode overview: true, // Vertical centering of slides center: true, // Enables touch navigation on devices with touch input touch: true, // Loop the presentation loop: false, // Change the presentation direction to be RTL rtl: false, // See https://github.com/hakimel/reveal.js/#navigation-mode navigationMode: 'default', // Randomizes the order of slides each time the presentation loads shuffle: false, // Turns fragments on and off globally fragments: true, // Flags whether to include the current fragment in the URL, // so that reloading brings you to the same fragment position fragmentInURL: false, // Flags if the presentation is running in an embedded mode, // i.e. contained within a limited portion of the screen embedded: false, // Flags if we should show a help overlay when the questionmark // key is pressed help: true, // Flags if speaker notes should be visible to all viewers showNotes: false, // Global override for autoplaying embedded media (video/audio/iframe) // - null: Media will only autoplay if data-autoplay is present // - true: All media will autoplay, regardless of individual setting // - false: No media will autoplay, regardless of individual setting autoPlayMedia: null, // Global override for preloading lazy-loaded iframes // - null: Iframes with data-src AND data-preload will be loaded when within // the viewDistance, iframes with only data-src will be loaded when visible // - true: All iframes with data-src will be loaded when within the viewDistance // - false: All iframes with data-src will be loaded only when visible preloadIframes: null, // Number of milliseconds between automatically proceeding to the // next slide, disabled when set to 0, this value can be overwritten // by using a data-autoslide attribute on your slides autoSlide: 0, // Stop auto-sliding after user input autoSlideStoppable: true, // Use this method for navigation when auto-sliding autoSlideMethod: Reveal.navigateNext, // Specify the average time in seconds that you think you will spend // presenting each slide. This is used to show a pacing timer in the // speaker view defaultTiming: 120, // Specify the total time in seconds that is available to // present. If this is set to a nonzero value, the pacing // timer will work out the time available for each slide, // instead of using the defaultTiming value totalTime: 0, // Specify the minimum amount of time you want to allot to // each slide, if using the totalTime calculation method. If // the automated time allocation causes slide pacing to fall // below this threshold, then you will see an alert in the // speaker notes window minimumTimePerSlide: 0; // Enable slide navigation via mouse wheel mouseWheel: false, // Hide cursor if inactive hideInactiveCursor: true, // Time before the cursor is hidden (in ms) hideCursorTime: 5000, // Hides the address bar on mobile devices hideAddressBar: true, // Opens links in an iframe preview overlay // Add `data-preview-link` and `data-preview-link=\"false\"` to customise each link // individually previewLinks: false, // Transition style transition: 'slide', // none/fade/slide/convex/concave/zoom // Transition speed transitionSpeed: 'default', // default/fast/slow // Transition style for full page slide backgrounds backgroundTransition: 'fade', // none/fade/slide/convex/concave/zoom // Number of slides away from the current that are visible viewDistance: 3, // Number of slides away from the current that are visible on mobile // devices. It is advisable to set this to a lower number than // viewDistance in order to save resources. mobileViewDistance: 2, // Parallax background image parallaxBackgroundImage: '', // e.g. \"'https://s3.amazonaws.com/hakim-static/reveal-js/reveal-parallax-1.jpg'\" // Parallax background size parallaxBackgroundSize: '', // CSS syntax, e.g. \"2100px 900px\" // Number of pixels to move the parallax background per slide // - Calculated automatically unless specified // - Set to 0 to disable movement along an axis parallaxBackgroundHorizontal: null, parallaxBackgroundVertical: null, // The display mode that will be used to show slides display: 'block' }); The configuration can be updated after initialization using the configure method: // Turn autoSlide off Reveal.configure({ autoSlide: 0 }); // Start auto-sliding every 5s Reveal.configure({ autoSlide: 5000 }); Presentation Size \u00b6 All presentations have a normal size, that is, the resolution at which they are authored. The framework will automatically scale presentations uniformly based on this size to ensure that everything fits on any given display or viewport. See below for a list of configuration options related to sizing, including default values: Reveal.initialize({ // ... // The \"normal\" size of the presentation, aspect ratio will be preserved // when the presentation is scaled to fit different resolutions. Can be // specified using percentage units. width: 960, height: 700, // Factor of the display size that should remain empty around the content margin: 0.1, // Bounds for smallest/largest possible scale to apply to content minScale: 0.2, maxScale: 1.5 }); If you wish to disable this behavior and do your own scaling (e.g. using media queries), try these settings: Reveal.initialize({ // ... width: \"100%\", height: \"100%\", margin: 0, minScale: 1, maxScale: 1 }); Dependencies \u00b6 Reveal.js doesn't rely on any third party scripts to work but a few optional libraries are included by default. These libraries are loaded as dependencies in the order they appear, for example: Reveal.initialize({ dependencies: [ // Interpret Markdown in <section> elements { src: 'plugin/markdown/marked.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } }, { src: 'plugin/markdown/markdown.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } }, // Syntax highlight for <code> elements { src: 'plugin/highlight/highlight.js', async: true }, // Zoom in and out with Alt+click { src: 'plugin/zoom-js/zoom.js', async: true }, // Speaker notes { src: 'plugin/notes/notes.js', async: true }, // MathJax { src: 'plugin/math/math.js', async: true } ] }); You can add your own extensions using the same syntax. The following properties are available for each dependency object: - src : Path to the script to load - async : [optional] Flags if the script should load after reveal.js has started, defaults to false - callback : [optional] Function to execute when the script has loaded - condition : [optional] Function which must return true for the script to be loaded Ready Event \u00b6 A ready event is fired when reveal.js has loaded all non-async dependencies and is ready to start navigating. To check if reveal.js is already 'ready' you can call Reveal.isReady() . Reveal.addEventListener( 'ready', function( event ) { // event.currentSlide, event.indexh, event.indexv } ); Note that we also add a .ready class to the .reveal element so that you can hook into this with CSS. Auto-sliding \u00b6 Presentations can be configured to progress through slides automatically, without any user input. To enable this you will need to tell the framework how many milliseconds it should wait between slides: // Slide every five seconds Reveal.configure({ autoSlide: 5000 }); When this is turned on a control element will appear that enables users to pause and resume auto-sliding. Alternatively, sliding can be paused or resumed by pressing \u00bbA\u00ab on the keyboard. Sliding is paused automatically as soon as the user starts navigating. You can disable these controls by specifying autoSlideStoppable: false in your reveal.js config. You can also override the slide duration for individual slides and fragments by using the data-autoslide attribute: <section data-autoslide=\"2000\"> <p>After 2 seconds the first fragment will be shown.</p> <p class=\"fragment\" data-autoslide=\"10000\">After 10 seconds the next fragment will be shown.</p> <p class=\"fragment\">Now, the fragment is displayed for 2 seconds before the next slide is shown.</p> </section> To override the method used for navigation when auto-sliding, you can specify the autoSlideMethod setting. To only navigate along the top layer and ignore vertical slides, set this to Reveal.navigateRight . Whenever the auto-slide mode is resumed or paused the autoslideresumed and autoslidepaused events are fired. Keyboard Bindings \u00b6 If you're unhappy with any of the default keyboard bindings you can override them using the keyboard config option: Reveal.configure({ keyboard: { 13: 'next', // go to the next slide when the ENTER key is pressed 27: function() {}, // do something custom when ESC is pressed 32: null // don't do anything when SPACE is pressed (i.e. disable a reveal.js default binding) } }); Vertical Slide Navigation \u00b6 Slides can be nested within other slides to create vertical stacks (see Markup ). When presenting, you use the left/right arrows to step through the main (horizontal) slides. When you arrive at a vertical stack you can optionally press the up/down arrows to view the vertical slides or skip past them by pressing the right arrow. Here's an example showing a bird's-eye view of what this looks like in action: Navigation Mode \u00b6 You can fine tune the reveal.js navigation behavior by using the navigationMode config option. Note that these options are only useful for presentations that use a mix of horizontal and vertical slides. The following navigation modes are available: Value Description default Left/right arrow keys step between horizontal slides. Up/down arrow keys step between vertical slides. Space key steps through all slides (both horizontal and vertical). linear Removes the up/down arrows. Left/right arrows step through all slides (both horizontal and vertical). grid When this is enabled, stepping left/right from a vertical stack to an adjacent vertical stack will land you at the same vertical index. Consider a deck with six slides ordered in two vertical stacks: 1.1 2.1 1.2 2.2 1.3 2.3 If you're on slide 1.3 and navigate right, you will normally move from 1.3 -> 2.1. With navigationMode set to \"grid\" the same navigation takes you from 1.3 -> 2.3. Touch Navigation \u00b6 You can swipe to navigate through a presentation on any touch-enabled device. Horizontal swipes change between horizontal slides, vertical swipes change between vertical slides. If you wish to disable this you can set the touch config option to false when initializing reveal.js. If there's some part of your content that needs to remain accessible to touch events you'll need to highlight this by adding a data-prevent-swipe attribute to the element. One common example where this is useful is elements that need to be scrolled. Lazy Loading \u00b6 When working on presentation with a lot of media or iframe content it's important to load lazily. Lazy loading means that reveal.js will only load content for the few slides nearest to the current slide. The number of slides that are preloaded is determined by the viewDistance configuration option. To enable lazy loading all you need to do is change your src attributes to data-src as shown below. This is supported for image, video, audio and iframe elements. <section> <img data-src=\"image.png\"> <iframe data-src=\"http://hakim.se\"></iframe> <video> <source data-src=\"video.webm\" type=\"video/webm\" /> <source data-src=\"video.mp4\" type=\"video/mp4\" /> </video> </section> Lazy Loading Iframes \u00b6 Note that lazy loaded iframes ignore the viewDistance configuration and will only load when their containing slide becomes visible. Iframes are also unloaded as soon as the slide is hidden. When we lazy load a video or audio element, reveal.js won't start playing that content until the slide becomes visible. However there is no way to control this for an iframe since that could contain any kind of content. That means if we loaded an iframe before the slide is visible on screen it could begin playing media and sound in the background. You can override this behavior with the data-preload attribute. The iframe below will be loaded according to the viewDistance . <section> <iframe data-src=\"http://hakim.se\" data-preload></iframe> </section> You can also change the default globally with the preloadIframes configuration option. If set to true ALL iframes with a data-src attribute will be preloaded when within the viewDistance regardless of individual data-preload attributes. If set to false , all iframes will only be loaded when they become visible. API \u00b6 The Reveal object exposes a JavaScript API for controlling navigation and reading state: // Navigation Reveal.slide( indexh, indexv, indexf ); Reveal.left(); Reveal.right(); Reveal.up(); Reveal.down(); Reveal.prev(); Reveal.next(); Reveal.prevFragment(); Reveal.nextFragment(); // Randomize the order of slides Reveal.shuffle(); // Toggle presentation states, optionally pass true/false to force on/off Reveal.toggleOverview(); Reveal.togglePause(); Reveal.toggleAutoSlide(); // Shows a help overlay with keyboard shortcuts, optionally pass true/false // to force on/off Reveal.toggleHelp(); // Change a config value at runtime Reveal.configure({ controls: true }); // Returns the present configuration options Reveal.getConfig(); // Fetch the current scale of the presentation Reveal.getScale(); // Retrieves the previous and current slide elements Reveal.getPreviousSlide(); Reveal.getCurrentSlide(); Reveal.getIndices(); // { h: 0, v: 0, f: 0 } Reveal.getSlidePastCount(); Reveal.getProgress(); // (0 == first slide, 1 == last slide) Reveal.getSlides(); // Array of all slides Reveal.getTotalSlides(); // Total number of slides // Returns an array with all horizontal/vertical slides in the deck Reveal.getHorizontalSlides(); Reveal.getVerticalSlides(); // Checks if the presentation contains two or more // horizontal/vertical slides Reveal.hasHorizontalSlides(); Reveal.hasVerticalSlides(); // Returns the speaker notes for the current slide Reveal.getSlideNotes(); // State checks Reveal.isFirstSlide(); Reveal.isLastSlide(); Reveal.isOverview(); Reveal.isPaused(); Reveal.isAutoSliding(); // Returns the top-level DOM element Reveal.getRevealElement(); // <div class=\"reveal\">...</div> Custom Key Bindings \u00b6 Custom key bindings can be added and removed using the following Javascript API. Custom key bindings will override the default keyboard bindings, but will in turn be overridden by the user defined bindings in the keyboard config option. Reveal.addKeyBinding( binding, callback ); Reveal.removeKeyBinding( keyCode ); For example // The binding parameter provides the following properties // keyCode: the keycode for binding to the callback // key: the key label to show in the help overlay // description: the description of the action to show in the help overlay Reveal.addKeyBinding( { keyCode: 84, key: 'T', description: 'Start timer' }, function() { // start timer } ) // The binding parameter can also be a direct keycode without providing the help description Reveal.addKeyBinding( 82, function() { // reset timer } ) This allows plugins to add key bindings directly to Reveal so they can make use of Reveal's pre-processing logic for key handling (for example, ignoring key presses when paused); and be included in the help overlay (optional) Slide Changed Event \u00b6 A slidechanged event is fired each time the slide is changed (regardless of state). The event object holds the index values of the current slide as well as a reference to the previous and current slide HTML nodes. Some libraries, like MathJax (see #226 ), get confused by the transforms and display states of slides. Often times, this can be fixed by calling their update or render function from this callback. Reveal.addEventListener( 'slidechanged', function( event ) { // event.previousSlide, event.currentSlide, event.indexh, event.indexv } ); Presentation State \u00b6 The presentation's current state can be fetched by using the getState method. A state object contains all of the information required to put the presentation back as it was when getState was first called. Sort of like a snapshot. It's a simple object that can easily be stringified and persisted or sent over the wire. Reveal.slide( 1 ); // we're on slide 1 var state = Reveal.getState(); Reveal.slide( 3 ); // we're on slide 3 Reveal.setState( state ); // we're back on slide 1 Slide States \u00b6 If you set data-state=\"somestate\" on a slide <section> , \"somestate\" will be applied as a class on the document element when that slide is opened. This allows you to apply broad style changes to the page based on the active slide. Furthermore you can also listen to these changes in state via JavaScript: Reveal.addEventListener( 'somestate', function() { // TODO: Sprinkle magic }, false ); Slide Backgrounds \u00b6 Slides are contained within a limited portion of the screen by default to allow them to fit any display and scale uniformly. You can apply full page backgrounds outside of the slide area by adding a data-background attribute to your <section> elements. Four different types of backgrounds are supported: color, image, video and iframe. Color Backgrounds \u00b6 All CSS color formats are supported, including hex values, keywords, rgba() or hsl() . <section data-background-color=\"#ff0000\"> <h2>Color</h2> </section> Image Backgrounds \u00b6 By default, background images are resized to cover the full page. Available options: Attribute Default Description data-background-image URL of the image to show. GIFs restart when the slide opens. data-background-size cover See background-size on MDN. data-background-position center See background-position on MDN. data-background-repeat no-repeat See background-repeat on MDN. data-background-opacity 1 Opacity of the background image on a 0-1 scale. 0 is transparent and 1 is fully opaque. <section data-background-image=\"http://example.com/image.png\"> <h2>Image</h2> </section> <section data-background-image=\"http://example.com/image.png\" data-background-size=\"100px\" data-background-repeat=\"repeat\"> <h2>This background image will be sized to 100px and repeated</h2> </section> Video Backgrounds \u00b6 Automatically plays a full size video behind the slide. Attribute Default Description data-background-video A single video source, or a comma separated list of video sources. data-background-video-loop false Flags if the video should play repeatedly. data-background-video-muted false Flags if the audio should be muted. data-background-size cover Use cover for full screen and some cropping or contain for letterboxing. data-background-opacity 1 Opacity of the background video on a 0-1 scale. 0 is transparent and 1 is fully opaque. <section data-background-video=\"https://s3.amazonaws.com/static.slid.es/site/homepage/v1/homepage-video-editor.mp4,https://s3.amazonaws.com/static.slid.es/site/homepage/v1/homepage-video-editor.webm\" data-background-video-loop data-background-video-muted> <h2>Video</h2> </section> Iframe Backgrounds \u00b6 Embeds a web page as a slide background that covers 100% of the reveal.js width and height. The iframe is in the background layer, behind your slides, and as such it's not possible to interact with it by default. To make your background interactive, you can add the data-background-interactive attribute. <section data-background-iframe=\"https://slides.com\" data-background-interactive> <h2>Iframe</h2> </section> Iframes are lazy-loaded when they become visible. If you'd like to preload iframes ahead of time, you can append a data-preload attribute to the slide <section> . You can also enable preloading globally for all iframes using the preloadIframes configuration option. Background Transitions \u00b6 Backgrounds transition using a fade animation by default. This can be changed to a linear sliding transition by passing backgroundTransition: 'slide' to the Reveal.initialize() call. Alternatively you can set data-background-transition on any section with a background to override that specific transition. Parallax Background \u00b6 If you want to use a parallax scrolling background, set the first two properties below when initializing reveal.js (the other two are optional). Reveal.initialize({ // Parallax background image parallaxBackgroundImage: '', // e.g. \"https://s3.amazonaws.com/hakim-static/reveal-js/reveal-parallax-1.jpg\" // Parallax background size parallaxBackgroundSize: '', // CSS syntax, e.g. \"2100px 900px\" - currently only pixels are supported (don't use % or auto) // Number of pixels to move the parallax background per slide // - Calculated automatically unless specified // - Set to 0 to disable movement along an axis parallaxBackgroundHorizontal: 200, parallaxBackgroundVertical: 50 }); Make sure that the background size is much bigger than screen size to allow for some scrolling. View example . Slide Transitions \u00b6 The global presentation transition is set using the transition config value. You can override the global transition for a specific slide by using the data-transition attribute: <section data-transition=\"zoom\"> <h2>This slide will override the presentation transition and zoom!</h2> </section> <section data-transition-speed=\"fast\"> <h2>Choose from three transition speeds: default, fast or slow!</h2> </section> You can also use different in and out transitions for the same slide: <section data-transition=\"slide\"> The train goes on \u2026 </section> <section data-transition=\"slide\"> and on \u2026 </section> <section data-transition=\"slide-in fade-out\"> and stops. </section> <section data-transition=\"fade-in slide-out\"> (Passengers entering and leaving) </section> <section data-transition=\"slide\"> And it starts again. </section> You can choose from none , fade , slide , convex , concave and zoom . Internal links \u00b6 It's easy to link between slides. The first example below targets the index of another slide whereas the second targets a slide with an ID attribute ( <section id=\"some-slide\"> ): <a href=\"#/2/2\">Link</a> <a href=\"#/some-slide\">Link</a> You can also add relative navigation links, similar to the built in reveal.js controls, by appending one of the following classes on any element. Note that each element is automatically given an enabled class when it's a valid navigation route based on the current slide. <a href=\"#\" class=\"navigate-left\"> <a href=\"#\" class=\"navigate-right\"> <a href=\"#\" class=\"navigate-up\"> <a href=\"#\" class=\"navigate-down\"> <a href=\"#\" class=\"navigate-prev\"> <!-- Previous vertical or horizontal slide --> <a href=\"#\" class=\"navigate-next\"> <!-- Next vertical or horizontal slide --> Fragments \u00b6 Fragments are used to highlight individual elements on a slide. Every element with the class fragment will be stepped through before moving on to the next slide. Here's an example: http://revealjs.com/#/fragments The default fragment style is to start out invisible and fade in. This style can be changed by appending a different class to the fragment: <section> <p class=\"fragment grow\">grow</p> <p class=\"fragment shrink\">shrink</p> <p class=\"fragment fade-out\">fade-out</p> <p class=\"fragment fade-up\">fade-up (also down, left and right!)</p> <p class=\"fragment fade-in-then-out\">fades in, then out when we move to the next step</p> <p class=\"fragment fade-in-then-semi-out\">fades in, then obfuscate when we move to the next step</p> <p class=\"fragment highlight-current-blue\">blue only once</p> <p class=\"fragment highlight-red\">highlight-red</p> <p class=\"fragment highlight-green\">highlight-green</p> <p class=\"fragment highlight-blue\">highlight-blue</p> </section> Multiple fragments can be applied to the same element sequentially by wrapping it, this will fade in the text on the first step and fade it back out on the second. <section> <span class=\"fragment fade-in\"> <span class=\"fragment fade-out\">I'll fade in, then out</span> </span> </section> The display order of fragments can be controlled using the data-fragment-index attribute. <section> <p class=\"fragment\" data-fragment-index=\"3\">Appears last</p> <p class=\"fragment\" data-fragment-index=\"1\">Appears first</p> <p class=\"fragment\" data-fragment-index=\"2\">Appears second</p> </section> Fragment events \u00b6 When a slide fragment is either shown or hidden reveal.js will dispatch an event. Some libraries, like MathJax (see #505), get confused by the initially hidden fragment elements. Often times this can be fixed by calling their update or render function from this callback. Reveal.addEventListener( 'fragmentshown', function( event ) { // event.fragment = the fragment DOM element } ); Reveal.addEventListener( 'fragmenthidden', function( event ) { // event.fragment = the fragment DOM element } ); Code Syntax Highlighting \u00b6 By default, Reveal is configured with highlight.js for code syntax highlighting. To enable syntax highlighting, you'll have to load the highlight plugin ( plugin/highlight/highlight.js ) and a highlight.js CSS theme (Reveal comes packaged with the Monokai themes: lib/css/monokai.css ). Reveal.initialize({ // More info https://github.com/hakimel/reveal.js#dependencies dependencies: [ { src: 'plugin/highlight/highlight.js', async: true }, ] }); Below is an example with clojure code that will be syntax highlighted. When the data-trim attribute is present, surrounding whitespace is automatically removed. HTML will be escaped by default. To avoid this, for example if you are using <mark> to call out a line of code, add the data-noescape attribute to the <code> element. <section> <pre><code data-trim data-noescape> (def lazy-fib (concat [0 1] <mark>((fn rfib [a b]</mark> (lazy-cons (+ a b) (rfib b (+ a b)))) 0 1))) </code></pre> </section> Line Numbers & Highlights \u00b6 To enable line numbers, add data-line-numbers to your <code> tags. If you want to highlight specific lines you can provide a comma separated list of line numbers using the same attribute. For example, in the following example lines 4 and 8-11 are highlighted: <pre><code class=\"hljs\" data-line-numbers=\"4,8-11\"> import React, { useState } from 'react'; function Example() { const [count, setCount] = useState(0); return ( <div> <p>You clicked {count} times</p> <button onClick={() => setCount(count + 1)}> Click me </button> </div> ); } </code></pre> Step-by-step Highlights \u00b6 You can step through multiple code highlights on the same code block. Delimit each of your highlight steps with the | character. For example data-line-numbers=\"1|2-3|4,6-10\" will produce three steps. It will start by highlighting line 1, next step is lines 2-3, and finally line 4 and 6 through 10. Slide number \u00b6 If you would like to display the page number of the current slide you can do so using the slideNumber and showSlideNumber configuration values. // Shows the slide number using default formatting Reveal.configure({ slideNumber: true }); // Slide number formatting can be configured using these variables: // \"h.v\": horizontal . vertical slide number (default) // \"h/v\": horizontal / vertical slide number // \"c\": flattened slide number // \"c/t\": flattened slide number / total slides Reveal.configure({ slideNumber: 'c/t' }); // You can provide a function to fully customize the number: Reveal.configure({ slideNumber: function( slide ) { // Ignore numbering of vertical slides return [ Reveal.getIndices( slide ).h ]; }}); // Control which views the slide number displays on using the \"showSlideNumber\" value: // \"all\": show on all views (default) // \"speaker\": only show slide numbers on speaker notes view // \"print\": only show slide numbers when printing to PDF Reveal.configure({ showSlideNumber: 'speaker' }); Overview mode \u00b6 Press \u00bbESC\u00ab or \u00bbO\u00ab keys to toggle the overview mode on and off. While you're in this mode, you can still navigate between slides, as if you were at 1,000 feet above your presentation. The overview mode comes with a few API hooks: Reveal.addEventListener( 'overviewshown', function( event ) { /* ... */ } ); Reveal.addEventListener( 'overviewhidden', function( event ) { /* ... */ } ); // Toggle the overview mode programmatically Reveal.toggleOverview(); Fullscreen mode \u00b6 Just press \u00bbF\u00ab on your keyboard to show your presentation in fullscreen mode. Press the \u00bbESC\u00ab key to exit fullscreen mode. Embedded media \u00b6 Add data-autoplay to your media element if you want it to automatically start playing when the slide is shown: <video data-autoplay src=\"http://clips.vorwaerts-gmbh.de/big_buck_bunny.mp4\"></video> If you want to enable or disable autoplay globally, for all embedded media, you can use the autoPlayMedia configuration option. If you set this to true ALL media will autoplay regardless of individual data-autoplay attributes. If you initialize with autoPlayMedia: false NO media will autoplay. Note that embedded HTML5 <video> / <audio> and YouTube/Vimeo iframes are automatically paused when you navigate away from a slide. This can be disabled by decorating your element with a data-ignore attribute. Embedded iframes \u00b6 reveal.js automatically pushes two post messages to embedded iframes. slide:start when the slide containing the iframe is made visible and slide:stop when it is hidden. Stretching elements \u00b6 Sometimes it's desirable to have an element, like an image or video, stretch to consume as much space as possible within a given slide. This can be done by adding the .stretch class to an element as seen below: <section> <h2>This video will use up the remaining space on the slide</h2> <video class=\"stretch\" src=\"http://clips.vorwaerts-gmbh.de/big_buck_bunny.mp4\"></video> </section> Limitations: - Only direct descendants of a slide section can be stretched - Only one descendant per slide section can be stretched Resize Event \u00b6 When reveal.js changes the scale of the slides it fires a resize event. You can subscribe to the event to resize your elements accordingly. Reveal.addEventListener( 'resize', function( event ) { // event.scale, event.oldScale, event.size } ); postMessage API \u00b6 The framework has a built-in postMessage API that can be used when communicating with a presentation inside of another window. Here's an example showing how you'd make a reveal.js instance in the given window proceed to slide 2: <window>.postMessage( JSON.stringify({ method: 'slide', args: [ 2 ] }), '*' ); postMessage Events \u00b6 When reveal.js runs inside of an iframe it can optionally bubble all of its events to the parent. Bubbled events are stringified JSON with three fields: namespace, eventName and state. Here's how you subscribe to them from the parent window: window.addEventListener( 'message', function( event ) { var data = JSON.parse( event.data ); if( data.namespace === 'reveal' && data.eventName === 'slidechanged' ) { // Slide changed, see data.state for slide number } } ); postMessage Callbacks \u00b6 When you call any method via the postMessage API, reveal.js will dispatch a message with the return value. This is done so that you can call a getter method and see what the result is. Check out this example: <revealWindow>.postMessage( JSON.stringify({ method: 'getTotalSlides' }), '*' ); window.addEventListener( 'message', function( event ) { var data = JSON.parse( event.data ); // `data.method`` is the method that we invoked if( data.namespace === 'reveal' && data.eventName === 'callback' && data.method === 'getTotalSlides' ) { data.result // = the total number of slides } } ); Turning postMessage on/off \u00b6 This cross-window messaging can be toggled on or off using configuration flags. These are the default values. Reveal.initialize({ // ... // Exposes the reveal.js API through window.postMessage postMessage: true, // Dispatches all reveal.js events to the parent window through postMessage postMessageEvents: false }); PDF Export \u00b6 Presentations can be exported to PDF via a special print stylesheet. This feature requires that you use Google Chrome or Chromium and to be serving the presentation from a web server. Here's an example of an exported presentation that's been uploaded to SlideShare: http://www.slideshare.net/hakimel/revealjs-300. Separate pages for fragments \u00b6 Fragments are printed on separate slides by default. Meaning if you have a slide with three fragment steps, it will generate three separate slides where the fragments appear incrementally. If you prefer printing all fragments in their visible states on the same slide you can set the pdfSeparateFragments config option to false. Page size \u00b6 Export dimensions are inferred from the configured presentation size . Slides that are too tall to fit within a single page will expand onto multiple pages. You can limit how many pages a slide may expand onto using the pdfMaxPagesPerSlide config option, for example Reveal.configure({ pdfMaxPagesPerSlide: 1 }) ensures that no slide ever grows to more than one printed page. Print stylesheet \u00b6 To enable the PDF print capability in your presentation, the special print stylesheet at /css/print/pdf.css must be loaded. The default index.html file handles this for you when print-pdf is included in the query string. If you're using a different HTML template, you can add this to your HEAD: <script> var link = document.createElement( 'link' ); link.rel = 'stylesheet'; link.type = 'text/css'; link.href = window.location.search.match( /print-pdf/gi ) ? 'css/print/pdf.css' : 'css/print/paper.css'; document.getElementsByTagName( 'head' )[0].appendChild( link ); </script> Instructions \u00b6 Open your presentation with print-pdf included in the query string i.e. http://localhost:8000/?print-pdf. You can test this with revealjs.com?print-pdf . If you want to include speaker notes in your export, you can append showNotes=true to the query string: http://localhost:8000/?print-pdf&showNotes=true Open the in-browser print dialog (CTRL/CMD+P). Change the Destination setting to Save as PDF . Change the Layout to Landscape . Change the Margins to None . Enable the Background graphics option. Click Save . Alternatively you can use the decktape project. Theming \u00b6 The framework comes with a few different themes included: black: Black background, white text, blue links (default theme) white: White background, black text, blue links league: Gray background, white text, blue links (default theme for reveal.js < 3.0.0) beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links Each theme is available as a separate stylesheet. To change theme you will need to replace black below with your desired theme name in index.html: <link rel=\"stylesheet\" href=\"css/theme/black.css\" id=\"theme\"> If you want to add a theme of your own see the instructions here: /css/theme/README.md . Speaker Notes \u00b6 reveal.js comes with a speaker notes plugin which can be used to present per-slide notes in a separate browser window. The notes window also gives you a preview of the next upcoming slide so it may be helpful even if you haven't written any notes. Press the \u00bbS\u00ab key on your keyboard to open the notes window. A speaker timer starts as soon as the speaker view is opened. You can reset it to 00:00:00 at any time by simply clicking/tapping on it. Notes are defined by appending an <aside> element to a slide as seen below. You can add the data-markdown attribute to the aside element if you prefer writing notes using Markdown. Alternatively you can add your notes in a data-notes attribute on the slide. Like <section data-notes=\"Something important\"></section> . When used locally, this feature requires that reveal.js runs from a local web server . <section> <h2>Some Slide</h2> <aside class=\"notes\"> Oh hey, these are some notes. They'll be hidden in your presentation, but you can see them if you open the speaker notes window (hit \u00bbS\u00ab on your keyboard). </aside> </section> If you're using the external Markdown plugin, you can add notes with the help of a special delimiter: <section data-markdown=\"example.md\" data-separator=\"^\\n\\n\\n\" data-separator-vertical=\"^\\n\\n\" data-separator-notes=\"^Note:\"></section> # Title ## Sub-title Here is some content... Note: This will only display in the notes window. Share and Print Speaker Notes \u00b6 Notes are only visible to the speaker inside of the speaker view. If you wish to share your notes with others you can initialize reveal.js with the showNotes configuration value set to true . Notes will appear along the bottom of the presentations. When showNotes is enabled notes are also included when you export to PDF . By default, notes are printed in a box on top of the slide. If you'd rather print them on a separate page, after the slide, set showNotes: \"separate-page\" . Speaker notes clock and timers \u00b6 The speaker notes window will also show: Time elapsed since the beginning of the presentation. If you hover the mouse above this section, a timer reset button will appear. Current wall-clock time (Optionally) a pacing timer which indicates whether the current pace of the presentation is on track for the right timing (shown in green), and if not, whether the presenter should speed up (shown in red) or has the luxury of slowing down (blue). The pacing timer can be enabled by configuring the defaultTiming parameter in the Reveal configuration block, which specifies the number of seconds per slide. 120 can be a reasonable rule of thumb. Alternatively, you can enable the timer by setting totalTime , which sets the total length of your presentation (also in seconds). If both values are specified, totalTime wins and defaultTiming is ignored. Regardless of the baseline timing method, timings can also be given per slide <section> by setting the data-timing attribute (again, in seconds). Server Side Speaker Notes \u00b6 In some cases it can be desirable to run notes on a separate device from the one you're presenting on. The Node.js-based notes plugin lets you do this using the same note definitions as its client side counterpart. Include the required scripts by adding the following dependencies: Reveal.initialize({ // ... dependencies: [ { src: 'socket.io/socket.io.js', async: true }, { src: 'plugin/notes-server/client.js', async: true } ] }); Then: Install Node.js (9.0.0 or later) Run npm install Run node plugin/notes-server Plugins \u00b6 Plugins should register themselves with reveal.js by calling Reveal.registerPlugin( 'myPluginID', MyPlugin ) . Registered plugin instances can optionally expose an \"init\" function that reveal.js will call to initialize them. When reveal.js is booted up via Reveal.initialize() , it will go through all registered plugins and invoke their \"init\" methods. If the \"init\" method returns a Promise, reveal.js will wait for that promise to be fulfilled before finishing the startup sequence and firing the ready event. Here's an example of a plugin that does some asynchronous work before reveal.js can proceed: let MyPlugin = { init: () => new Promise( resolve => setTimeout( resolve, 3000 ) ) }; Reveal.registerPlugin( 'myPlugin', MyPlugin ); Reveal.addEventListener( 'ready', () => console.log( 'Three seconds later...' ) ); Reveal.initialize(); Note that reveal.js will not wait for init Promise fulfillment if the plugin is loaded as an async dependency . If the plugin's init method does not return a Promise, the plugin is considered ready right away and will not hold up the reveal.js startup sequence. Retrieving Plugins \u00b6 If you want to check if a specific plugin is registered you can use the Reveal.hasPlugin method and pass in a plugin ID, for example: Reveal.hasPlugin( 'myPlugin' ) . If you want to retrieve a plugin instance you can use Reveal.getPlugin( 'myPlugin' ) . Multiplexing \u00b6 The multiplex plugin allows your audience to view the slides of the presentation you are controlling on their own phone, tablet or laptop. As the master presentation navigates the slides, all client presentations will update in real time. See a demo at https://reveal-js-multiplex-ccjbegmaii.now.sh/ . The multiplex plugin needs the following 3 things to operate: Master presentation that has control Client presentations that follow the master Socket.io server to broadcast events from the master to the clients Master presentation \u00b6 Served from a static file server accessible (preferably) only to the presenter. This need only be on your (the presenter's) computer. (It's safer to run the master presentation from your own computer, so if the venue's Internet goes down it doesn't stop the show.) An example would be to execute the following commands in the directory of your master presentation: npm install node-static static If you want to use the speaker notes plugin with your master presentation then make sure you have the speaker notes plugin configured correctly along with the configuration shown below, then execute node plugin/notes-server in the directory of your master presentation. The configuration below will cause it to connect to the socket.io server as a master, as well as launch your speaker-notes/static-file server. You can then access your master presentation at http://localhost:1947 Example configuration: Reveal.initialize({ // other options... multiplex: { // Example values. To generate your own, see the socket.io server instructions. secret: '13652805320794272084', // Obtained from the socket.io server. Gives this (the master) control of the presentation id: '1ea875674b17ca76', // Obtained from socket.io server url: 'https://reveal-js-multiplex-ccjbegmaii.now.sh' // Location of socket.io server }, // Don't forget to add the dependencies dependencies: [ { src: '//cdnjs.cloudflare.com/ajax/libs/socket.io/2.2.0/socket.io.js', async: true }, { src: 'plugin/multiplex/master.js', async: true }, // and if you want speaker notes { src: 'plugin/notes-server/client.js', async: true } // other dependencies... ] }); Client presentation \u00b6 Served from a publicly accessible static file server. Examples include: GitHub Pages, Amazon S3, Dreamhost, Akamai, etc. The more reliable, the better. Your audience can then access the client presentation via https://example.com/path/to/presentation/client/index.html , with the configuration below causing them to connect to the socket.io server as clients. Example configuration: Reveal.initialize({ // other options... multiplex: { // Example values. To generate your own, see the socket.io server instructions. secret: null, // null so the clients do not have control of the master presentation id: '1ea875674b17ca76', // id, obtained from socket.io server url: 'https://reveal-js-multiplex-ccjbegmaii.now.sh' // Location of socket.io server }, // Don't forget to add the dependencies dependencies: [ { src: '//cdnjs.cloudflare.com/ajax/libs/socket.io/2.2.0/socket.io.js', async: true }, { src: 'plugin/multiplex/client.js', async: true } // other dependencies... ] }); Socket.io server \u00b6 Server that receives the slideChanged events from the master presentation and broadcasts them out to the connected client presentations. This needs to be publicly accessible. You can run your own socket.io server with the commands: npm install node plugin/multiplex Or you can use the socket.io server at https://reveal-js-multiplex-ccjbegmaii.now.sh/ . You'll need to generate a unique secret and token pair for your master and client presentations. To do so, visit https://example.com/token , where https://example.com is the location of your socket.io server. Or if you're going to use the socket.io server at https://reveal-js-multiplex-ccjbegmaii.now.sh/ , visit https://reveal-js-multiplex-ccjbegmaii.now.sh/token . You are very welcome to point your presentations at the Socket.io server running at https://reveal-js-multiplex-ccjbegmaii.now.sh/ , but availability and stability are not guaranteed. For anything mission critical I recommend you run your own server. The easiest way to do this is by installing now . With that installed, deploying your own Multiplex server is as easy running the following command from the reveal.js folder: now plugin/multiplex . socket.io server as file static server \u00b6 The socket.io server can play the role of static file server for your client presentation, as in the example at https://reveal-js-multiplex-ccjbegmaii.now.sh/ . (Open https://reveal-js-multiplex-ccjbegmaii.now.sh/ in two browsers. Navigate through the slides on one, and the other will update to match.) Example configuration: Reveal.initialize({ // other options... multiplex: { // Example values. To generate your own, see the socket.io server instructions. secret: null, // null so the clients do not have control of the master presentation id: '1ea875674b17ca76', // id, obtained from socket.io server url: 'example.com:80' // Location of your socket.io server }, // Don't forget to add the dependencies dependencies: [ { src: '//cdnjs.cloudflare.com/ajax/libs/socket.io/2.2.0/socket.io.js', async: true }, { src: 'plugin/multiplex/client.js', async: true } // other dependencies... ] It can also play the role of static file server for your master presentation and client presentations at the same time (as long as you don't want to use speaker notes). (Open https://reveal-js-multiplex-ccjbegmaii.now.sh/ in two browsers. Navigate through the slides on one, and the other will update to match. Navigate through the slides on the second, and the first will update to match.) This is probably not desirable, because you don't want your audience to mess with your slides while you're presenting. ;) Example configuration: Reveal.initialize({ // other options... multiplex: { // Example values. To generate your own, see the socket.io server instructions. secret: '13652805320794272084', // Obtained from the socket.io server. Gives this (the master) control of the presentation id: '1ea875674b17ca76', // Obtained from socket.io server url: 'example.com:80' // Location of your socket.io server }, // Don't forget to add the dependencies dependencies: [ { src: '//cdnjs.cloudflare.com/ajax/libs/socket.io/2.2.0/socket.io.js', async: true }, { src: 'plugin/multiplex/master.js', async: true }, { src: 'plugin/multiplex/client.js', async: true } // other dependencies... ] }); MathJax \u00b6 If you want to display math equations in your presentation you can easily do so by including this plugin. The plugin is a very thin wrapper around the MathJax library. To use it you'll need to include it as a reveal.js dependency, find our more about dependencies here . The plugin defaults to using LaTeX but that can be adjusted through the math configuration object. Note that MathJax is loaded from a remote server. If you want to use it offline you'll need to download a copy of the library and adjust the mathjax configuration value. Below is an example of how the plugin can be configured. If you don't intend to change these values you do not need to include the math config object at all. Reveal.initialize({ // other options ... math: { mathjax: 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js', config: 'TeX-AMS_HTML-full', // See http://docs.mathjax.org/en/latest/config-files.html // pass other options into `MathJax.Hub.Config()` TeX: { Macros: { RR: \"{\\\\bf R}\" } } }, dependencies: [ { src: 'plugin/math/math.js', async: true } ] }); Read MathJax's documentation if you need HTTPS delivery or serving of specific versions for stability. MathJax in Markdown \u00b6 If you want to include math inside of a presentation written in Markdown you need to wrap the formula in backticks. This prevents syntax conflicts between LaTeX and Markdown. For example: `$$ J(\\theta_0,\\theta_1) = \\sum_{i=0} $$` License \u00b6 MIT licensed Copyright (C) 2020 Hakim El Hattab, http://hakim.se","title":"reveal.js [![Build Status](https://travis-ci.org/hakimel/reveal.js.svg?branch=master)](https://travis-ci.org/hakimel/reveal.js) <a href=\"https://slides.com?ref=github\"><img src=\"https://s3.amazonaws.com/static.slid.es/images/slides-github-banner-320x40.png?1\" alt=\"Slides\" width=\"160\" height=\"20\"></a>"},{"location":"slides/test/node_modules/reveal.js/#revealjs","text":"A framework for easily creating beautiful presentations using HTML. Check out the live demo . reveal.js comes with a broad range of features including nested slides , Markdown support , PDF export , speaker notes and a JavaScript API . There's also a fully featured visual editor and platform for sharing reveal.js presentations at slides.com .","title":"reveal.js  "},{"location":"slides/test/node_modules/reveal.js/#supporting-revealjs","text":"This project was started and is maintained by @hakimel with the help of many contributions from the community . The best way to support the project is to become a paying member of Slides.com \u2014the reveal.js presentation platform that Hakim is building.","title":"Supporting reveal.js"},{"location":"slides/test/node_modules/reveal.js/#table-of-contents","text":"Online Editor Installation Basic setup Full setup Folder Structure Instructions Markup Markdown Element Attributes Slide Attributes Configuration Presentation Size Dependencies Ready Event Auto-sliding Keyboard Bindings Vertical Slide Navigation Touch Navigation Lazy Loading API Custom Key Bindings Slide Changed Event Presentation State Slide States Slide Backgrounds Parallax Background Slide Transitions Internal links Fragments Fragment events Code syntax highlighting Slide number Overview mode Fullscreen mode Embedded media Stretching elements Resize Event postMessage API PDF Export Theming Speaker Notes Share and Print Speaker Notes Server Side Speaker Notes Plugins Multiplexing Master presentation Client presentation Socket.io server MathJax License","title":"Table of contents"},{"location":"slides/test/node_modules/reveal.js/#more-reading","text":"Changelog : Up-to-date version history. Examples : Presentations created with reveal.js, add your own! Browser Support : Explanation of browser support and fallbacks. Plugins : A list of plugins that can be used to extend reveal.js.","title":"More reading"},{"location":"slides/test/node_modules/reveal.js/#online-editor","text":"Presentations are written using HTML or Markdown but there's also an online editor for those of you who prefer a graphical interface. Give it a try at https://slides.com .","title":"Online Editor"},{"location":"slides/test/node_modules/reveal.js/#installation","text":"The basic setup is for authoring presentations only. The full setup gives you access to all reveal.js features and plugins such as speaker notes as well as the development tasks needed to make changes to the source.","title":"Installation"},{"location":"slides/test/node_modules/reveal.js/#basic-setup","text":"The core of reveal.js is very easy to install. You'll simply need to download a copy of this repository and open the index.html file directly in your browser. Download the latest version of reveal.js from https://github.com/hakimel/reveal.js/releases Unzip and replace the example contents in index.html with your own Open index.html in a browser to view it","title":"Basic setup"},{"location":"slides/test/node_modules/reveal.js/#full-setup","text":"Some reveal.js features, like external Markdown and speaker notes, require that presentations run from a local web server. The following instructions will set up such a server as well as all of the development tasks needed to make edits to the reveal.js source code. Install Node.js (9.0.0 or later) Clone the reveal.js repository sh $ git clone https://github.com/hakimel/reveal.js.git Navigate to the reveal.js folder sh $ cd reveal.js Install dependencies sh $ npm install Serve the presentation and monitor source files for changes sh $ npm start Open http://localhost:8000 to view your presentation You can change the port by using npm start -- --port=8001 .","title":"Full setup"},{"location":"slides/test/node_modules/reveal.js/#folder-structure","text":"css/ Core styles without which the project does not function js/ Like above but for JavaScript plugin/ Components that have been developed as extensions to reveal.js lib/ All other third party assets (JavaScript, CSS, fonts)","title":"Folder Structure"},{"location":"slides/test/node_modules/reveal.js/#instructions","text":"","title":"Instructions"},{"location":"slides/test/node_modules/reveal.js/#markup","text":"Here's a barebones example of a fully working reveal.js presentation: <html> <head> <link rel=\"stylesheet\" href=\"css/reveal.css\"> <link rel=\"stylesheet\" href=\"css/theme/white.css\"> </head> <body> <div class=\"reveal\"> <div class=\"slides\"> <section>Slide 1</section> <section>Slide 2</section> </div> </div> <script src=\"js/reveal.js\"></script> <script> Reveal.initialize(); </script> </body> </html> The presentation markup hierarchy needs to be .reveal > .slides > section where the section represents one slide and can be repeated indefinitely. If you place multiple section elements inside of another section they will be shown as vertical slides. The first of the vertical slides is the \"root\" of the others (at the top), and will be included in the horizontal sequence. For example: <div class=\"reveal\"> <div class=\"slides\"> <section>Single Horizontal Slide</section> <section> <section>Vertical Slide 1</section> <section>Vertical Slide 2</section> </section> </div> </div>","title":"Markup"},{"location":"slides/test/node_modules/reveal.js/#markdown","text":"It's possible to write your slides using Markdown. To enable Markdown, add the data-markdown attribute to your <section> elements and wrap the contents in a <textarea data-template> like the example below. You'll also need to add the plugin/markdown/marked.js and plugin/markdown/markdown.js scripts (in that order) to your HTML file. This is based on data-markdown from Paul Irish modified to use marked to support GitHub Flavored Markdown . Sensitive to indentation (avoid mixing tabs and spaces) and line breaks (avoid consecutive breaks). <section data-markdown> <textarea data-template> ## Page title A paragraph with some text and a [link](http://hakim.se). </textarea> </section>","title":"Markdown"},{"location":"slides/test/node_modules/reveal.js/#external-markdown","text":"You can write your content as a separate file and have reveal.js load it at runtime. Note the separator arguments which determine how slides are delimited in the external file: the data-separator attribute defines a regular expression for horizontal slides (defaults to ^\\r?\\n---\\r?\\n$ , a newline-bounded horizontal rule) and data-separator-vertical defines vertical slides (disabled by default). The data-separator-notes attribute is a regular expression for specifying the beginning of the current slide's speaker notes (defaults to notes?: , so it will match both \"note:\" and \"notes:\"). The data-charset attribute is optional and specifies which charset to use when loading the external file. When used locally, this feature requires that reveal.js runs from a local web server . The following example customises all available options: <section data-markdown=\"example.md\" data-separator=\"^\\n\\n\\n\" data-separator-vertical=\"^\\n\\n\" data-separator-notes=\"^Note:\" data-charset=\"iso-8859-15\"> <!-- Note that Windows uses `\\r\\n` instead of `\\n` as its linefeed character. For a regex that supports all operating systems, use `\\r?\\n` instead of `\\n`. --> </section>","title":"External Markdown"},{"location":"slides/test/node_modules/reveal.js/#element-attributes","text":"Special syntax (through HTML comments) is available for adding attributes to Markdown elements. This is useful for fragments, amongst other things. <section data-markdown> <script type=\"text/template\"> - Item 1 <!-- .element: class=\"fragment\" data-fragment-index=\"2\" --> - Item 2 <!-- .element: class=\"fragment\" data-fragment-index=\"1\" --> </script> </section>","title":"Element Attributes"},{"location":"slides/test/node_modules/reveal.js/#slide-attributes","text":"Special syntax (through HTML comments) is available for adding attributes to the slide <section> elements generated by your Markdown. <section data-markdown> <script type=\"text/template\"> <!-- .slide: data-background=\"#ff0000\" --> Markdown content </script> </section>","title":"Slide Attributes"},{"location":"slides/test/node_modules/reveal.js/#configuring-marked","text":"We use marked to parse Markdown. To customise marked's rendering, you can pass in options when configuring Reveal : Reveal.initialize({ // Options which are passed into marked // See https://marked.js.org/#/USING_ADVANCED.md#options markdown: { smartypants: true } });","title":"Configuring marked"},{"location":"slides/test/node_modules/reveal.js/#configuration","text":"At the end of your page you need to initialize reveal by running the following code. Note that all configuration values are optional and will default to the values specified below. Reveal.initialize({ // Display presentation control arrows controls: true, // Help the user learn the controls by providing hints, for example by // bouncing the down arrow when they first encounter a vertical slide controlsTutorial: true, // Determines where controls appear, \"edges\" or \"bottom-right\" controlsLayout: 'bottom-right', // Visibility rule for backwards navigation arrows; \"faded\", \"hidden\" // or \"visible\" controlsBackArrows: 'faded', // Display a presentation progress bar progress: true, // Display the page number of the current slide slideNumber: false, // Add the current slide number to the URL hash so that reloading the // page/copying the URL will return you to the same slide hash: false, // Push each slide change to the browser history. Implies `hash: true` history: false, // Enable keyboard shortcuts for navigation keyboard: true, // Enable the slide overview mode overview: true, // Vertical centering of slides center: true, // Enables touch navigation on devices with touch input touch: true, // Loop the presentation loop: false, // Change the presentation direction to be RTL rtl: false, // See https://github.com/hakimel/reveal.js/#navigation-mode navigationMode: 'default', // Randomizes the order of slides each time the presentation loads shuffle: false, // Turns fragments on and off globally fragments: true, // Flags whether to include the current fragment in the URL, // so that reloading brings you to the same fragment position fragmentInURL: false, // Flags if the presentation is running in an embedded mode, // i.e. contained within a limited portion of the screen embedded: false, // Flags if we should show a help overlay when the questionmark // key is pressed help: true, // Flags if speaker notes should be visible to all viewers showNotes: false, // Global override for autoplaying embedded media (video/audio/iframe) // - null: Media will only autoplay if data-autoplay is present // - true: All media will autoplay, regardless of individual setting // - false: No media will autoplay, regardless of individual setting autoPlayMedia: null, // Global override for preloading lazy-loaded iframes // - null: Iframes with data-src AND data-preload will be loaded when within // the viewDistance, iframes with only data-src will be loaded when visible // - true: All iframes with data-src will be loaded when within the viewDistance // - false: All iframes with data-src will be loaded only when visible preloadIframes: null, // Number of milliseconds between automatically proceeding to the // next slide, disabled when set to 0, this value can be overwritten // by using a data-autoslide attribute on your slides autoSlide: 0, // Stop auto-sliding after user input autoSlideStoppable: true, // Use this method for navigation when auto-sliding autoSlideMethod: Reveal.navigateNext, // Specify the average time in seconds that you think you will spend // presenting each slide. This is used to show a pacing timer in the // speaker view defaultTiming: 120, // Specify the total time in seconds that is available to // present. If this is set to a nonzero value, the pacing // timer will work out the time available for each slide, // instead of using the defaultTiming value totalTime: 0, // Specify the minimum amount of time you want to allot to // each slide, if using the totalTime calculation method. If // the automated time allocation causes slide pacing to fall // below this threshold, then you will see an alert in the // speaker notes window minimumTimePerSlide: 0; // Enable slide navigation via mouse wheel mouseWheel: false, // Hide cursor if inactive hideInactiveCursor: true, // Time before the cursor is hidden (in ms) hideCursorTime: 5000, // Hides the address bar on mobile devices hideAddressBar: true, // Opens links in an iframe preview overlay // Add `data-preview-link` and `data-preview-link=\"false\"` to customise each link // individually previewLinks: false, // Transition style transition: 'slide', // none/fade/slide/convex/concave/zoom // Transition speed transitionSpeed: 'default', // default/fast/slow // Transition style for full page slide backgrounds backgroundTransition: 'fade', // none/fade/slide/convex/concave/zoom // Number of slides away from the current that are visible viewDistance: 3, // Number of slides away from the current that are visible on mobile // devices. It is advisable to set this to a lower number than // viewDistance in order to save resources. mobileViewDistance: 2, // Parallax background image parallaxBackgroundImage: '', // e.g. \"'https://s3.amazonaws.com/hakim-static/reveal-js/reveal-parallax-1.jpg'\" // Parallax background size parallaxBackgroundSize: '', // CSS syntax, e.g. \"2100px 900px\" // Number of pixels to move the parallax background per slide // - Calculated automatically unless specified // - Set to 0 to disable movement along an axis parallaxBackgroundHorizontal: null, parallaxBackgroundVertical: null, // The display mode that will be used to show slides display: 'block' }); The configuration can be updated after initialization using the configure method: // Turn autoSlide off Reveal.configure({ autoSlide: 0 }); // Start auto-sliding every 5s Reveal.configure({ autoSlide: 5000 });","title":"Configuration"},{"location":"slides/test/node_modules/reveal.js/#presentation-size","text":"All presentations have a normal size, that is, the resolution at which they are authored. The framework will automatically scale presentations uniformly based on this size to ensure that everything fits on any given display or viewport. See below for a list of configuration options related to sizing, including default values: Reveal.initialize({ // ... // The \"normal\" size of the presentation, aspect ratio will be preserved // when the presentation is scaled to fit different resolutions. Can be // specified using percentage units. width: 960, height: 700, // Factor of the display size that should remain empty around the content margin: 0.1, // Bounds for smallest/largest possible scale to apply to content minScale: 0.2, maxScale: 1.5 }); If you wish to disable this behavior and do your own scaling (e.g. using media queries), try these settings: Reveal.initialize({ // ... width: \"100%\", height: \"100%\", margin: 0, minScale: 1, maxScale: 1 });","title":"Presentation Size"},{"location":"slides/test/node_modules/reveal.js/#dependencies","text":"Reveal.js doesn't rely on any third party scripts to work but a few optional libraries are included by default. These libraries are loaded as dependencies in the order they appear, for example: Reveal.initialize({ dependencies: [ // Interpret Markdown in <section> elements { src: 'plugin/markdown/marked.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } }, { src: 'plugin/markdown/markdown.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } }, // Syntax highlight for <code> elements { src: 'plugin/highlight/highlight.js', async: true }, // Zoom in and out with Alt+click { src: 'plugin/zoom-js/zoom.js', async: true }, // Speaker notes { src: 'plugin/notes/notes.js', async: true }, // MathJax { src: 'plugin/math/math.js', async: true } ] }); You can add your own extensions using the same syntax. The following properties are available for each dependency object: - src : Path to the script to load - async : [optional] Flags if the script should load after reveal.js has started, defaults to false - callback : [optional] Function to execute when the script has loaded - condition : [optional] Function which must return true for the script to be loaded","title":"Dependencies"},{"location":"slides/test/node_modules/reveal.js/#ready-event","text":"A ready event is fired when reveal.js has loaded all non-async dependencies and is ready to start navigating. To check if reveal.js is already 'ready' you can call Reveal.isReady() . Reveal.addEventListener( 'ready', function( event ) { // event.currentSlide, event.indexh, event.indexv } ); Note that we also add a .ready class to the .reveal element so that you can hook into this with CSS.","title":"Ready Event"},{"location":"slides/test/node_modules/reveal.js/#auto-sliding","text":"Presentations can be configured to progress through slides automatically, without any user input. To enable this you will need to tell the framework how many milliseconds it should wait between slides: // Slide every five seconds Reveal.configure({ autoSlide: 5000 }); When this is turned on a control element will appear that enables users to pause and resume auto-sliding. Alternatively, sliding can be paused or resumed by pressing \u00bbA\u00ab on the keyboard. Sliding is paused automatically as soon as the user starts navigating. You can disable these controls by specifying autoSlideStoppable: false in your reveal.js config. You can also override the slide duration for individual slides and fragments by using the data-autoslide attribute: <section data-autoslide=\"2000\"> <p>After 2 seconds the first fragment will be shown.</p> <p class=\"fragment\" data-autoslide=\"10000\">After 10 seconds the next fragment will be shown.</p> <p class=\"fragment\">Now, the fragment is displayed for 2 seconds before the next slide is shown.</p> </section> To override the method used for navigation when auto-sliding, you can specify the autoSlideMethod setting. To only navigate along the top layer and ignore vertical slides, set this to Reveal.navigateRight . Whenever the auto-slide mode is resumed or paused the autoslideresumed and autoslidepaused events are fired.","title":"Auto-sliding"},{"location":"slides/test/node_modules/reveal.js/#keyboard-bindings","text":"If you're unhappy with any of the default keyboard bindings you can override them using the keyboard config option: Reveal.configure({ keyboard: { 13: 'next', // go to the next slide when the ENTER key is pressed 27: function() {}, // do something custom when ESC is pressed 32: null // don't do anything when SPACE is pressed (i.e. disable a reveal.js default binding) } });","title":"Keyboard Bindings"},{"location":"slides/test/node_modules/reveal.js/#vertical-slide-navigation","text":"Slides can be nested within other slides to create vertical stacks (see Markup ). When presenting, you use the left/right arrows to step through the main (horizontal) slides. When you arrive at a vertical stack you can optionally press the up/down arrows to view the vertical slides or skip past them by pressing the right arrow. Here's an example showing a bird's-eye view of what this looks like in action:","title":"Vertical Slide Navigation"},{"location":"slides/test/node_modules/reveal.js/#navigation-mode","text":"You can fine tune the reveal.js navigation behavior by using the navigationMode config option. Note that these options are only useful for presentations that use a mix of horizontal and vertical slides. The following navigation modes are available: Value Description default Left/right arrow keys step between horizontal slides. Up/down arrow keys step between vertical slides. Space key steps through all slides (both horizontal and vertical). linear Removes the up/down arrows. Left/right arrows step through all slides (both horizontal and vertical). grid When this is enabled, stepping left/right from a vertical stack to an adjacent vertical stack will land you at the same vertical index. Consider a deck with six slides ordered in two vertical stacks: 1.1 2.1 1.2 2.2 1.3 2.3 If you're on slide 1.3 and navigate right, you will normally move from 1.3 -> 2.1. With navigationMode set to \"grid\" the same navigation takes you from 1.3 -> 2.3.","title":"Navigation Mode"},{"location":"slides/test/node_modules/reveal.js/#touch-navigation","text":"You can swipe to navigate through a presentation on any touch-enabled device. Horizontal swipes change between horizontal slides, vertical swipes change between vertical slides. If you wish to disable this you can set the touch config option to false when initializing reveal.js. If there's some part of your content that needs to remain accessible to touch events you'll need to highlight this by adding a data-prevent-swipe attribute to the element. One common example where this is useful is elements that need to be scrolled.","title":"Touch Navigation"},{"location":"slides/test/node_modules/reveal.js/#lazy-loading","text":"When working on presentation with a lot of media or iframe content it's important to load lazily. Lazy loading means that reveal.js will only load content for the few slides nearest to the current slide. The number of slides that are preloaded is determined by the viewDistance configuration option. To enable lazy loading all you need to do is change your src attributes to data-src as shown below. This is supported for image, video, audio and iframe elements. <section> <img data-src=\"image.png\"> <iframe data-src=\"http://hakim.se\"></iframe> <video> <source data-src=\"video.webm\" type=\"video/webm\" /> <source data-src=\"video.mp4\" type=\"video/mp4\" /> </video> </section>","title":"Lazy Loading"},{"location":"slides/test/node_modules/reveal.js/#lazy-loading-iframes","text":"Note that lazy loaded iframes ignore the viewDistance configuration and will only load when their containing slide becomes visible. Iframes are also unloaded as soon as the slide is hidden. When we lazy load a video or audio element, reveal.js won't start playing that content until the slide becomes visible. However there is no way to control this for an iframe since that could contain any kind of content. That means if we loaded an iframe before the slide is visible on screen it could begin playing media and sound in the background. You can override this behavior with the data-preload attribute. The iframe below will be loaded according to the viewDistance . <section> <iframe data-src=\"http://hakim.se\" data-preload></iframe> </section> You can also change the default globally with the preloadIframes configuration option. If set to true ALL iframes with a data-src attribute will be preloaded when within the viewDistance regardless of individual data-preload attributes. If set to false , all iframes will only be loaded when they become visible.","title":"Lazy Loading Iframes"},{"location":"slides/test/node_modules/reveal.js/#api","text":"The Reveal object exposes a JavaScript API for controlling navigation and reading state: // Navigation Reveal.slide( indexh, indexv, indexf ); Reveal.left(); Reveal.right(); Reveal.up(); Reveal.down(); Reveal.prev(); Reveal.next(); Reveal.prevFragment(); Reveal.nextFragment(); // Randomize the order of slides Reveal.shuffle(); // Toggle presentation states, optionally pass true/false to force on/off Reveal.toggleOverview(); Reveal.togglePause(); Reveal.toggleAutoSlide(); // Shows a help overlay with keyboard shortcuts, optionally pass true/false // to force on/off Reveal.toggleHelp(); // Change a config value at runtime Reveal.configure({ controls: true }); // Returns the present configuration options Reveal.getConfig(); // Fetch the current scale of the presentation Reveal.getScale(); // Retrieves the previous and current slide elements Reveal.getPreviousSlide(); Reveal.getCurrentSlide(); Reveal.getIndices(); // { h: 0, v: 0, f: 0 } Reveal.getSlidePastCount(); Reveal.getProgress(); // (0 == first slide, 1 == last slide) Reveal.getSlides(); // Array of all slides Reveal.getTotalSlides(); // Total number of slides // Returns an array with all horizontal/vertical slides in the deck Reveal.getHorizontalSlides(); Reveal.getVerticalSlides(); // Checks if the presentation contains two or more // horizontal/vertical slides Reveal.hasHorizontalSlides(); Reveal.hasVerticalSlides(); // Returns the speaker notes for the current slide Reveal.getSlideNotes(); // State checks Reveal.isFirstSlide(); Reveal.isLastSlide(); Reveal.isOverview(); Reveal.isPaused(); Reveal.isAutoSliding(); // Returns the top-level DOM element Reveal.getRevealElement(); // <div class=\"reveal\">...</div>","title":"API"},{"location":"slides/test/node_modules/reveal.js/#custom-key-bindings","text":"Custom key bindings can be added and removed using the following Javascript API. Custom key bindings will override the default keyboard bindings, but will in turn be overridden by the user defined bindings in the keyboard config option. Reveal.addKeyBinding( binding, callback ); Reveal.removeKeyBinding( keyCode ); For example // The binding parameter provides the following properties // keyCode: the keycode for binding to the callback // key: the key label to show in the help overlay // description: the description of the action to show in the help overlay Reveal.addKeyBinding( { keyCode: 84, key: 'T', description: 'Start timer' }, function() { // start timer } ) // The binding parameter can also be a direct keycode without providing the help description Reveal.addKeyBinding( 82, function() { // reset timer } ) This allows plugins to add key bindings directly to Reveal so they can make use of Reveal's pre-processing logic for key handling (for example, ignoring key presses when paused); and be included in the help overlay (optional)","title":"Custom Key Bindings"},{"location":"slides/test/node_modules/reveal.js/#slide-changed-event","text":"A slidechanged event is fired each time the slide is changed (regardless of state). The event object holds the index values of the current slide as well as a reference to the previous and current slide HTML nodes. Some libraries, like MathJax (see #226 ), get confused by the transforms and display states of slides. Often times, this can be fixed by calling their update or render function from this callback. Reveal.addEventListener( 'slidechanged', function( event ) { // event.previousSlide, event.currentSlide, event.indexh, event.indexv } );","title":"Slide Changed Event"},{"location":"slides/test/node_modules/reveal.js/#presentation-state","text":"The presentation's current state can be fetched by using the getState method. A state object contains all of the information required to put the presentation back as it was when getState was first called. Sort of like a snapshot. It's a simple object that can easily be stringified and persisted or sent over the wire. Reveal.slide( 1 ); // we're on slide 1 var state = Reveal.getState(); Reveal.slide( 3 ); // we're on slide 3 Reveal.setState( state ); // we're back on slide 1","title":"Presentation State"},{"location":"slides/test/node_modules/reveal.js/#slide-states","text":"If you set data-state=\"somestate\" on a slide <section> , \"somestate\" will be applied as a class on the document element when that slide is opened. This allows you to apply broad style changes to the page based on the active slide. Furthermore you can also listen to these changes in state via JavaScript: Reveal.addEventListener( 'somestate', function() { // TODO: Sprinkle magic }, false );","title":"Slide States"},{"location":"slides/test/node_modules/reveal.js/#slide-backgrounds","text":"Slides are contained within a limited portion of the screen by default to allow them to fit any display and scale uniformly. You can apply full page backgrounds outside of the slide area by adding a data-background attribute to your <section> elements. Four different types of backgrounds are supported: color, image, video and iframe.","title":"Slide Backgrounds"},{"location":"slides/test/node_modules/reveal.js/#color-backgrounds","text":"All CSS color formats are supported, including hex values, keywords, rgba() or hsl() . <section data-background-color=\"#ff0000\"> <h2>Color</h2> </section>","title":"Color Backgrounds"},{"location":"slides/test/node_modules/reveal.js/#image-backgrounds","text":"By default, background images are resized to cover the full page. Available options: Attribute Default Description data-background-image URL of the image to show. GIFs restart when the slide opens. data-background-size cover See background-size on MDN. data-background-position center See background-position on MDN. data-background-repeat no-repeat See background-repeat on MDN. data-background-opacity 1 Opacity of the background image on a 0-1 scale. 0 is transparent and 1 is fully opaque. <section data-background-image=\"http://example.com/image.png\"> <h2>Image</h2> </section> <section data-background-image=\"http://example.com/image.png\" data-background-size=\"100px\" data-background-repeat=\"repeat\"> <h2>This background image will be sized to 100px and repeated</h2> </section>","title":"Image Backgrounds"},{"location":"slides/test/node_modules/reveal.js/#video-backgrounds","text":"Automatically plays a full size video behind the slide. Attribute Default Description data-background-video A single video source, or a comma separated list of video sources. data-background-video-loop false Flags if the video should play repeatedly. data-background-video-muted false Flags if the audio should be muted. data-background-size cover Use cover for full screen and some cropping or contain for letterboxing. data-background-opacity 1 Opacity of the background video on a 0-1 scale. 0 is transparent and 1 is fully opaque. <section data-background-video=\"https://s3.amazonaws.com/static.slid.es/site/homepage/v1/homepage-video-editor.mp4,https://s3.amazonaws.com/static.slid.es/site/homepage/v1/homepage-video-editor.webm\" data-background-video-loop data-background-video-muted> <h2>Video</h2> </section>","title":"Video Backgrounds"},{"location":"slides/test/node_modules/reveal.js/#iframe-backgrounds","text":"Embeds a web page as a slide background that covers 100% of the reveal.js width and height. The iframe is in the background layer, behind your slides, and as such it's not possible to interact with it by default. To make your background interactive, you can add the data-background-interactive attribute. <section data-background-iframe=\"https://slides.com\" data-background-interactive> <h2>Iframe</h2> </section> Iframes are lazy-loaded when they become visible. If you'd like to preload iframes ahead of time, you can append a data-preload attribute to the slide <section> . You can also enable preloading globally for all iframes using the preloadIframes configuration option.","title":"Iframe Backgrounds"},{"location":"slides/test/node_modules/reveal.js/#background-transitions","text":"Backgrounds transition using a fade animation by default. This can be changed to a linear sliding transition by passing backgroundTransition: 'slide' to the Reveal.initialize() call. Alternatively you can set data-background-transition on any section with a background to override that specific transition.","title":"Background Transitions"},{"location":"slides/test/node_modules/reveal.js/#parallax-background","text":"If you want to use a parallax scrolling background, set the first two properties below when initializing reveal.js (the other two are optional). Reveal.initialize({ // Parallax background image parallaxBackgroundImage: '', // e.g. \"https://s3.amazonaws.com/hakim-static/reveal-js/reveal-parallax-1.jpg\" // Parallax background size parallaxBackgroundSize: '', // CSS syntax, e.g. \"2100px 900px\" - currently only pixels are supported (don't use % or auto) // Number of pixels to move the parallax background per slide // - Calculated automatically unless specified // - Set to 0 to disable movement along an axis parallaxBackgroundHorizontal: 200, parallaxBackgroundVertical: 50 }); Make sure that the background size is much bigger than screen size to allow for some scrolling. View example .","title":"Parallax Background"},{"location":"slides/test/node_modules/reveal.js/#slide-transitions","text":"The global presentation transition is set using the transition config value. You can override the global transition for a specific slide by using the data-transition attribute: <section data-transition=\"zoom\"> <h2>This slide will override the presentation transition and zoom!</h2> </section> <section data-transition-speed=\"fast\"> <h2>Choose from three transition speeds: default, fast or slow!</h2> </section> You can also use different in and out transitions for the same slide: <section data-transition=\"slide\"> The train goes on \u2026 </section> <section data-transition=\"slide\"> and on \u2026 </section> <section data-transition=\"slide-in fade-out\"> and stops. </section> <section data-transition=\"fade-in slide-out\"> (Passengers entering and leaving) </section> <section data-transition=\"slide\"> And it starts again. </section> You can choose from none , fade , slide , convex , concave and zoom .","title":"Slide Transitions"},{"location":"slides/test/node_modules/reveal.js/#internal-links","text":"It's easy to link between slides. The first example below targets the index of another slide whereas the second targets a slide with an ID attribute ( <section id=\"some-slide\"> ): <a href=\"#/2/2\">Link</a> <a href=\"#/some-slide\">Link</a> You can also add relative navigation links, similar to the built in reveal.js controls, by appending one of the following classes on any element. Note that each element is automatically given an enabled class when it's a valid navigation route based on the current slide. <a href=\"#\" class=\"navigate-left\"> <a href=\"#\" class=\"navigate-right\"> <a href=\"#\" class=\"navigate-up\"> <a href=\"#\" class=\"navigate-down\"> <a href=\"#\" class=\"navigate-prev\"> <!-- Previous vertical or horizontal slide --> <a href=\"#\" class=\"navigate-next\"> <!-- Next vertical or horizontal slide -->","title":"Internal links"},{"location":"slides/test/node_modules/reveal.js/#fragments","text":"Fragments are used to highlight individual elements on a slide. Every element with the class fragment will be stepped through before moving on to the next slide. Here's an example: http://revealjs.com/#/fragments The default fragment style is to start out invisible and fade in. This style can be changed by appending a different class to the fragment: <section> <p class=\"fragment grow\">grow</p> <p class=\"fragment shrink\">shrink</p> <p class=\"fragment fade-out\">fade-out</p> <p class=\"fragment fade-up\">fade-up (also down, left and right!)</p> <p class=\"fragment fade-in-then-out\">fades in, then out when we move to the next step</p> <p class=\"fragment fade-in-then-semi-out\">fades in, then obfuscate when we move to the next step</p> <p class=\"fragment highlight-current-blue\">blue only once</p> <p class=\"fragment highlight-red\">highlight-red</p> <p class=\"fragment highlight-green\">highlight-green</p> <p class=\"fragment highlight-blue\">highlight-blue</p> </section> Multiple fragments can be applied to the same element sequentially by wrapping it, this will fade in the text on the first step and fade it back out on the second. <section> <span class=\"fragment fade-in\"> <span class=\"fragment fade-out\">I'll fade in, then out</span> </span> </section> The display order of fragments can be controlled using the data-fragment-index attribute. <section> <p class=\"fragment\" data-fragment-index=\"3\">Appears last</p> <p class=\"fragment\" data-fragment-index=\"1\">Appears first</p> <p class=\"fragment\" data-fragment-index=\"2\">Appears second</p> </section>","title":"Fragments"},{"location":"slides/test/node_modules/reveal.js/#fragment-events","text":"When a slide fragment is either shown or hidden reveal.js will dispatch an event. Some libraries, like MathJax (see #505), get confused by the initially hidden fragment elements. Often times this can be fixed by calling their update or render function from this callback. Reveal.addEventListener( 'fragmentshown', function( event ) { // event.fragment = the fragment DOM element } ); Reveal.addEventListener( 'fragmenthidden', function( event ) { // event.fragment = the fragment DOM element } );","title":"Fragment events"},{"location":"slides/test/node_modules/reveal.js/#code-syntax-highlighting","text":"By default, Reveal is configured with highlight.js for code syntax highlighting. To enable syntax highlighting, you'll have to load the highlight plugin ( plugin/highlight/highlight.js ) and a highlight.js CSS theme (Reveal comes packaged with the Monokai themes: lib/css/monokai.css ). Reveal.initialize({ // More info https://github.com/hakimel/reveal.js#dependencies dependencies: [ { src: 'plugin/highlight/highlight.js', async: true }, ] }); Below is an example with clojure code that will be syntax highlighted. When the data-trim attribute is present, surrounding whitespace is automatically removed. HTML will be escaped by default. To avoid this, for example if you are using <mark> to call out a line of code, add the data-noescape attribute to the <code> element. <section> <pre><code data-trim data-noescape> (def lazy-fib (concat [0 1] <mark>((fn rfib [a b]</mark> (lazy-cons (+ a b) (rfib b (+ a b)))) 0 1))) </code></pre> </section>","title":"Code Syntax Highlighting"},{"location":"slides/test/node_modules/reveal.js/#line-numbers-highlights","text":"To enable line numbers, add data-line-numbers to your <code> tags. If you want to highlight specific lines you can provide a comma separated list of line numbers using the same attribute. For example, in the following example lines 4 and 8-11 are highlighted: <pre><code class=\"hljs\" data-line-numbers=\"4,8-11\"> import React, { useState } from 'react'; function Example() { const [count, setCount] = useState(0); return ( <div> <p>You clicked {count} times</p> <button onClick={() => setCount(count + 1)}> Click me </button> </div> ); } </code></pre>","title":"Line Numbers &amp; Highlights"},{"location":"slides/test/node_modules/reveal.js/#step-by-step-highlights","text":"You can step through multiple code highlights on the same code block. Delimit each of your highlight steps with the | character. For example data-line-numbers=\"1|2-3|4,6-10\" will produce three steps. It will start by highlighting line 1, next step is lines 2-3, and finally line 4 and 6 through 10.","title":"Step-by-step Highlights"},{"location":"slides/test/node_modules/reveal.js/#slide-number","text":"If you would like to display the page number of the current slide you can do so using the slideNumber and showSlideNumber configuration values. // Shows the slide number using default formatting Reveal.configure({ slideNumber: true }); // Slide number formatting can be configured using these variables: // \"h.v\": horizontal . vertical slide number (default) // \"h/v\": horizontal / vertical slide number // \"c\": flattened slide number // \"c/t\": flattened slide number / total slides Reveal.configure({ slideNumber: 'c/t' }); // You can provide a function to fully customize the number: Reveal.configure({ slideNumber: function( slide ) { // Ignore numbering of vertical slides return [ Reveal.getIndices( slide ).h ]; }}); // Control which views the slide number displays on using the \"showSlideNumber\" value: // \"all\": show on all views (default) // \"speaker\": only show slide numbers on speaker notes view // \"print\": only show slide numbers when printing to PDF Reveal.configure({ showSlideNumber: 'speaker' });","title":"Slide number"},{"location":"slides/test/node_modules/reveal.js/#overview-mode","text":"Press \u00bbESC\u00ab or \u00bbO\u00ab keys to toggle the overview mode on and off. While you're in this mode, you can still navigate between slides, as if you were at 1,000 feet above your presentation. The overview mode comes with a few API hooks: Reveal.addEventListener( 'overviewshown', function( event ) { /* ... */ } ); Reveal.addEventListener( 'overviewhidden', function( event ) { /* ... */ } ); // Toggle the overview mode programmatically Reveal.toggleOverview();","title":"Overview mode"},{"location":"slides/test/node_modules/reveal.js/#fullscreen-mode","text":"Just press \u00bbF\u00ab on your keyboard to show your presentation in fullscreen mode. Press the \u00bbESC\u00ab key to exit fullscreen mode.","title":"Fullscreen mode"},{"location":"slides/test/node_modules/reveal.js/#embedded-media","text":"Add data-autoplay to your media element if you want it to automatically start playing when the slide is shown: <video data-autoplay src=\"http://clips.vorwaerts-gmbh.de/big_buck_bunny.mp4\"></video> If you want to enable or disable autoplay globally, for all embedded media, you can use the autoPlayMedia configuration option. If you set this to true ALL media will autoplay regardless of individual data-autoplay attributes. If you initialize with autoPlayMedia: false NO media will autoplay. Note that embedded HTML5 <video> / <audio> and YouTube/Vimeo iframes are automatically paused when you navigate away from a slide. This can be disabled by decorating your element with a data-ignore attribute.","title":"Embedded media"},{"location":"slides/test/node_modules/reveal.js/#embedded-iframes","text":"reveal.js automatically pushes two post messages to embedded iframes. slide:start when the slide containing the iframe is made visible and slide:stop when it is hidden.","title":"Embedded iframes"},{"location":"slides/test/node_modules/reveal.js/#stretching-elements","text":"Sometimes it's desirable to have an element, like an image or video, stretch to consume as much space as possible within a given slide. This can be done by adding the .stretch class to an element as seen below: <section> <h2>This video will use up the remaining space on the slide</h2> <video class=\"stretch\" src=\"http://clips.vorwaerts-gmbh.de/big_buck_bunny.mp4\"></video> </section> Limitations: - Only direct descendants of a slide section can be stretched - Only one descendant per slide section can be stretched","title":"Stretching elements"},{"location":"slides/test/node_modules/reveal.js/#resize-event","text":"When reveal.js changes the scale of the slides it fires a resize event. You can subscribe to the event to resize your elements accordingly. Reveal.addEventListener( 'resize', function( event ) { // event.scale, event.oldScale, event.size } );","title":"Resize Event"},{"location":"slides/test/node_modules/reveal.js/#postmessage-api","text":"The framework has a built-in postMessage API that can be used when communicating with a presentation inside of another window. Here's an example showing how you'd make a reveal.js instance in the given window proceed to slide 2: <window>.postMessage( JSON.stringify({ method: 'slide', args: [ 2 ] }), '*' );","title":"postMessage API"},{"location":"slides/test/node_modules/reveal.js/#postmessage-events","text":"When reveal.js runs inside of an iframe it can optionally bubble all of its events to the parent. Bubbled events are stringified JSON with three fields: namespace, eventName and state. Here's how you subscribe to them from the parent window: window.addEventListener( 'message', function( event ) { var data = JSON.parse( event.data ); if( data.namespace === 'reveal' && data.eventName === 'slidechanged' ) { // Slide changed, see data.state for slide number } } );","title":"postMessage Events"},{"location":"slides/test/node_modules/reveal.js/#postmessage-callbacks","text":"When you call any method via the postMessage API, reveal.js will dispatch a message with the return value. This is done so that you can call a getter method and see what the result is. Check out this example: <revealWindow>.postMessage( JSON.stringify({ method: 'getTotalSlides' }), '*' ); window.addEventListener( 'message', function( event ) { var data = JSON.parse( event.data ); // `data.method`` is the method that we invoked if( data.namespace === 'reveal' && data.eventName === 'callback' && data.method === 'getTotalSlides' ) { data.result // = the total number of slides } } );","title":"postMessage Callbacks"},{"location":"slides/test/node_modules/reveal.js/#turning-postmessage-onoff","text":"This cross-window messaging can be toggled on or off using configuration flags. These are the default values. Reveal.initialize({ // ... // Exposes the reveal.js API through window.postMessage postMessage: true, // Dispatches all reveal.js events to the parent window through postMessage postMessageEvents: false });","title":"Turning postMessage on/off"},{"location":"slides/test/node_modules/reveal.js/#pdf-export","text":"Presentations can be exported to PDF via a special print stylesheet. This feature requires that you use Google Chrome or Chromium and to be serving the presentation from a web server. Here's an example of an exported presentation that's been uploaded to SlideShare: http://www.slideshare.net/hakimel/revealjs-300.","title":"PDF Export"},{"location":"slides/test/node_modules/reveal.js/#separate-pages-for-fragments","text":"Fragments are printed on separate slides by default. Meaning if you have a slide with three fragment steps, it will generate three separate slides where the fragments appear incrementally. If you prefer printing all fragments in their visible states on the same slide you can set the pdfSeparateFragments config option to false.","title":"Separate pages for fragments"},{"location":"slides/test/node_modules/reveal.js/#page-size","text":"Export dimensions are inferred from the configured presentation size . Slides that are too tall to fit within a single page will expand onto multiple pages. You can limit how many pages a slide may expand onto using the pdfMaxPagesPerSlide config option, for example Reveal.configure({ pdfMaxPagesPerSlide: 1 }) ensures that no slide ever grows to more than one printed page.","title":"Page size"},{"location":"slides/test/node_modules/reveal.js/#print-stylesheet","text":"To enable the PDF print capability in your presentation, the special print stylesheet at /css/print/pdf.css must be loaded. The default index.html file handles this for you when print-pdf is included in the query string. If you're using a different HTML template, you can add this to your HEAD: <script> var link = document.createElement( 'link' ); link.rel = 'stylesheet'; link.type = 'text/css'; link.href = window.location.search.match( /print-pdf/gi ) ? 'css/print/pdf.css' : 'css/print/paper.css'; document.getElementsByTagName( 'head' )[0].appendChild( link ); </script>","title":"Print stylesheet"},{"location":"slides/test/node_modules/reveal.js/#instructions_1","text":"Open your presentation with print-pdf included in the query string i.e. http://localhost:8000/?print-pdf. You can test this with revealjs.com?print-pdf . If you want to include speaker notes in your export, you can append showNotes=true to the query string: http://localhost:8000/?print-pdf&showNotes=true Open the in-browser print dialog (CTRL/CMD+P). Change the Destination setting to Save as PDF . Change the Layout to Landscape . Change the Margins to None . Enable the Background graphics option. Click Save . Alternatively you can use the decktape project.","title":"Instructions"},{"location":"slides/test/node_modules/reveal.js/#theming","text":"The framework comes with a few different themes included: black: Black background, white text, blue links (default theme) white: White background, black text, blue links league: Gray background, white text, blue links (default theme for reveal.js < 3.0.0) beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links Each theme is available as a separate stylesheet. To change theme you will need to replace black below with your desired theme name in index.html: <link rel=\"stylesheet\" href=\"css/theme/black.css\" id=\"theme\"> If you want to add a theme of your own see the instructions here: /css/theme/README.md .","title":"Theming"},{"location":"slides/test/node_modules/reveal.js/#speaker-notes","text":"reveal.js comes with a speaker notes plugin which can be used to present per-slide notes in a separate browser window. The notes window also gives you a preview of the next upcoming slide so it may be helpful even if you haven't written any notes. Press the \u00bbS\u00ab key on your keyboard to open the notes window. A speaker timer starts as soon as the speaker view is opened. You can reset it to 00:00:00 at any time by simply clicking/tapping on it. Notes are defined by appending an <aside> element to a slide as seen below. You can add the data-markdown attribute to the aside element if you prefer writing notes using Markdown. Alternatively you can add your notes in a data-notes attribute on the slide. Like <section data-notes=\"Something important\"></section> . When used locally, this feature requires that reveal.js runs from a local web server . <section> <h2>Some Slide</h2> <aside class=\"notes\"> Oh hey, these are some notes. They'll be hidden in your presentation, but you can see them if you open the speaker notes window (hit \u00bbS\u00ab on your keyboard). </aside> </section> If you're using the external Markdown plugin, you can add notes with the help of a special delimiter: <section data-markdown=\"example.md\" data-separator=\"^\\n\\n\\n\" data-separator-vertical=\"^\\n\\n\" data-separator-notes=\"^Note:\"></section> # Title ## Sub-title Here is some content... Note: This will only display in the notes window.","title":"Speaker Notes"},{"location":"slides/test/node_modules/reveal.js/#share-and-print-speaker-notes","text":"Notes are only visible to the speaker inside of the speaker view. If you wish to share your notes with others you can initialize reveal.js with the showNotes configuration value set to true . Notes will appear along the bottom of the presentations. When showNotes is enabled notes are also included when you export to PDF . By default, notes are printed in a box on top of the slide. If you'd rather print them on a separate page, after the slide, set showNotes: \"separate-page\" .","title":"Share and Print Speaker Notes"},{"location":"slides/test/node_modules/reveal.js/#speaker-notes-clock-and-timers","text":"The speaker notes window will also show: Time elapsed since the beginning of the presentation. If you hover the mouse above this section, a timer reset button will appear. Current wall-clock time (Optionally) a pacing timer which indicates whether the current pace of the presentation is on track for the right timing (shown in green), and if not, whether the presenter should speed up (shown in red) or has the luxury of slowing down (blue). The pacing timer can be enabled by configuring the defaultTiming parameter in the Reveal configuration block, which specifies the number of seconds per slide. 120 can be a reasonable rule of thumb. Alternatively, you can enable the timer by setting totalTime , which sets the total length of your presentation (also in seconds). If both values are specified, totalTime wins and defaultTiming is ignored. Regardless of the baseline timing method, timings can also be given per slide <section> by setting the data-timing attribute (again, in seconds).","title":"Speaker notes clock and timers"},{"location":"slides/test/node_modules/reveal.js/#server-side-speaker-notes","text":"In some cases it can be desirable to run notes on a separate device from the one you're presenting on. The Node.js-based notes plugin lets you do this using the same note definitions as its client side counterpart. Include the required scripts by adding the following dependencies: Reveal.initialize({ // ... dependencies: [ { src: 'socket.io/socket.io.js', async: true }, { src: 'plugin/notes-server/client.js', async: true } ] }); Then: Install Node.js (9.0.0 or later) Run npm install Run node plugin/notes-server","title":"Server Side Speaker Notes"},{"location":"slides/test/node_modules/reveal.js/#plugins","text":"Plugins should register themselves with reveal.js by calling Reveal.registerPlugin( 'myPluginID', MyPlugin ) . Registered plugin instances can optionally expose an \"init\" function that reveal.js will call to initialize them. When reveal.js is booted up via Reveal.initialize() , it will go through all registered plugins and invoke their \"init\" methods. If the \"init\" method returns a Promise, reveal.js will wait for that promise to be fulfilled before finishing the startup sequence and firing the ready event. Here's an example of a plugin that does some asynchronous work before reveal.js can proceed: let MyPlugin = { init: () => new Promise( resolve => setTimeout( resolve, 3000 ) ) }; Reveal.registerPlugin( 'myPlugin', MyPlugin ); Reveal.addEventListener( 'ready', () => console.log( 'Three seconds later...' ) ); Reveal.initialize(); Note that reveal.js will not wait for init Promise fulfillment if the plugin is loaded as an async dependency . If the plugin's init method does not return a Promise, the plugin is considered ready right away and will not hold up the reveal.js startup sequence.","title":"Plugins"},{"location":"slides/test/node_modules/reveal.js/#retrieving-plugins","text":"If you want to check if a specific plugin is registered you can use the Reveal.hasPlugin method and pass in a plugin ID, for example: Reveal.hasPlugin( 'myPlugin' ) . If you want to retrieve a plugin instance you can use Reveal.getPlugin( 'myPlugin' ) .","title":"Retrieving Plugins"},{"location":"slides/test/node_modules/reveal.js/#multiplexing","text":"The multiplex plugin allows your audience to view the slides of the presentation you are controlling on their own phone, tablet or laptop. As the master presentation navigates the slides, all client presentations will update in real time. See a demo at https://reveal-js-multiplex-ccjbegmaii.now.sh/ . The multiplex plugin needs the following 3 things to operate: Master presentation that has control Client presentations that follow the master Socket.io server to broadcast events from the master to the clients","title":"Multiplexing"},{"location":"slides/test/node_modules/reveal.js/#master-presentation","text":"Served from a static file server accessible (preferably) only to the presenter. This need only be on your (the presenter's) computer. (It's safer to run the master presentation from your own computer, so if the venue's Internet goes down it doesn't stop the show.) An example would be to execute the following commands in the directory of your master presentation: npm install node-static static If you want to use the speaker notes plugin with your master presentation then make sure you have the speaker notes plugin configured correctly along with the configuration shown below, then execute node plugin/notes-server in the directory of your master presentation. The configuration below will cause it to connect to the socket.io server as a master, as well as launch your speaker-notes/static-file server. You can then access your master presentation at http://localhost:1947 Example configuration: Reveal.initialize({ // other options... multiplex: { // Example values. To generate your own, see the socket.io server instructions. secret: '13652805320794272084', // Obtained from the socket.io server. Gives this (the master) control of the presentation id: '1ea875674b17ca76', // Obtained from socket.io server url: 'https://reveal-js-multiplex-ccjbegmaii.now.sh' // Location of socket.io server }, // Don't forget to add the dependencies dependencies: [ { src: '//cdnjs.cloudflare.com/ajax/libs/socket.io/2.2.0/socket.io.js', async: true }, { src: 'plugin/multiplex/master.js', async: true }, // and if you want speaker notes { src: 'plugin/notes-server/client.js', async: true } // other dependencies... ] });","title":"Master presentation"},{"location":"slides/test/node_modules/reveal.js/#client-presentation","text":"Served from a publicly accessible static file server. Examples include: GitHub Pages, Amazon S3, Dreamhost, Akamai, etc. The more reliable, the better. Your audience can then access the client presentation via https://example.com/path/to/presentation/client/index.html , with the configuration below causing them to connect to the socket.io server as clients. Example configuration: Reveal.initialize({ // other options... multiplex: { // Example values. To generate your own, see the socket.io server instructions. secret: null, // null so the clients do not have control of the master presentation id: '1ea875674b17ca76', // id, obtained from socket.io server url: 'https://reveal-js-multiplex-ccjbegmaii.now.sh' // Location of socket.io server }, // Don't forget to add the dependencies dependencies: [ { src: '//cdnjs.cloudflare.com/ajax/libs/socket.io/2.2.0/socket.io.js', async: true }, { src: 'plugin/multiplex/client.js', async: true } // other dependencies... ] });","title":"Client presentation"},{"location":"slides/test/node_modules/reveal.js/#socketio-server","text":"Server that receives the slideChanged events from the master presentation and broadcasts them out to the connected client presentations. This needs to be publicly accessible. You can run your own socket.io server with the commands: npm install node plugin/multiplex Or you can use the socket.io server at https://reveal-js-multiplex-ccjbegmaii.now.sh/ . You'll need to generate a unique secret and token pair for your master and client presentations. To do so, visit https://example.com/token , where https://example.com is the location of your socket.io server. Or if you're going to use the socket.io server at https://reveal-js-multiplex-ccjbegmaii.now.sh/ , visit https://reveal-js-multiplex-ccjbegmaii.now.sh/token . You are very welcome to point your presentations at the Socket.io server running at https://reveal-js-multiplex-ccjbegmaii.now.sh/ , but availability and stability are not guaranteed. For anything mission critical I recommend you run your own server. The easiest way to do this is by installing now . With that installed, deploying your own Multiplex server is as easy running the following command from the reveal.js folder: now plugin/multiplex .","title":"Socket.io server"},{"location":"slides/test/node_modules/reveal.js/#socketio-server-as-file-static-server","text":"The socket.io server can play the role of static file server for your client presentation, as in the example at https://reveal-js-multiplex-ccjbegmaii.now.sh/ . (Open https://reveal-js-multiplex-ccjbegmaii.now.sh/ in two browsers. Navigate through the slides on one, and the other will update to match.) Example configuration: Reveal.initialize({ // other options... multiplex: { // Example values. To generate your own, see the socket.io server instructions. secret: null, // null so the clients do not have control of the master presentation id: '1ea875674b17ca76', // id, obtained from socket.io server url: 'example.com:80' // Location of your socket.io server }, // Don't forget to add the dependencies dependencies: [ { src: '//cdnjs.cloudflare.com/ajax/libs/socket.io/2.2.0/socket.io.js', async: true }, { src: 'plugin/multiplex/client.js', async: true } // other dependencies... ] It can also play the role of static file server for your master presentation and client presentations at the same time (as long as you don't want to use speaker notes). (Open https://reveal-js-multiplex-ccjbegmaii.now.sh/ in two browsers. Navigate through the slides on one, and the other will update to match. Navigate through the slides on the second, and the first will update to match.) This is probably not desirable, because you don't want your audience to mess with your slides while you're presenting. ;) Example configuration: Reveal.initialize({ // other options... multiplex: { // Example values. To generate your own, see the socket.io server instructions. secret: '13652805320794272084', // Obtained from the socket.io server. Gives this (the master) control of the presentation id: '1ea875674b17ca76', // Obtained from socket.io server url: 'example.com:80' // Location of your socket.io server }, // Don't forget to add the dependencies dependencies: [ { src: '//cdnjs.cloudflare.com/ajax/libs/socket.io/2.2.0/socket.io.js', async: true }, { src: 'plugin/multiplex/master.js', async: true }, { src: 'plugin/multiplex/client.js', async: true } // other dependencies... ] });","title":"socket.io server as file static server"},{"location":"slides/test/node_modules/reveal.js/#mathjax","text":"If you want to display math equations in your presentation you can easily do so by including this plugin. The plugin is a very thin wrapper around the MathJax library. To use it you'll need to include it as a reveal.js dependency, find our more about dependencies here . The plugin defaults to using LaTeX but that can be adjusted through the math configuration object. Note that MathJax is loaded from a remote server. If you want to use it offline you'll need to download a copy of the library and adjust the mathjax configuration value. Below is an example of how the plugin can be configured. If you don't intend to change these values you do not need to include the math config object at all. Reveal.initialize({ // other options ... math: { mathjax: 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js', config: 'TeX-AMS_HTML-full', // See http://docs.mathjax.org/en/latest/config-files.html // pass other options into `MathJax.Hub.Config()` TeX: { Macros: { RR: \"{\\\\bf R}\" } } }, dependencies: [ { src: 'plugin/math/math.js', async: true } ] }); Read MathJax's documentation if you need HTTPS delivery or serving of specific versions for stability.","title":"MathJax"},{"location":"slides/test/node_modules/reveal.js/#mathjax-in-markdown","text":"If you want to include math inside of a presentation written in Markdown you need to wrap the formula in backticks. This prevents syntax conflicts between LaTeX and Markdown. For example: `$$ J(\\theta_0,\\theta_1) = \\sum_{i=0} $$`","title":"MathJax in Markdown"},{"location":"slides/test/node_modules/reveal.js/#license","text":"MIT licensed Copyright (C) 2020 Hakim El Hattab, http://hakim.se","title":"License"},{"location":"slides/test/node_modules/reveal.js/CONTRIBUTING/","text":"Contributing \u00b6 Please keep the issue tracker limited to bug reports , feature requests and pull requests . Personal Support \u00b6 If you have personal support or setup questions the best place to ask those are StackOverflow . Bug Reports \u00b6 When reporting a bug make sure to include information about which browser and operating system you are on as well as the necessary steps to reproduce the issue. If possible please include a link to a sample presentation where the bug can be tested. Pull Requests \u00b6 Should follow the coding style of the file you work in, most importantly: Tabs to indent Single-quoted strings Should be made towards the dev branch Should be submitted from a feature/topic branch (not your master) Plugins \u00b6 Please do not submit plugins as pull requests. They should be maintained in their own separate repository. More information here: https://github.com/hakimel/reveal.js/wiki/Plugin-Guidelines","title":"CONTRIBUTING"},{"location":"slides/test/node_modules/reveal.js/CONTRIBUTING/#contributing","text":"Please keep the issue tracker limited to bug reports , feature requests and pull requests .","title":"Contributing"},{"location":"slides/test/node_modules/reveal.js/CONTRIBUTING/#personal-support","text":"If you have personal support or setup questions the best place to ask those are StackOverflow .","title":"Personal Support"},{"location":"slides/test/node_modules/reveal.js/CONTRIBUTING/#bug-reports","text":"When reporting a bug make sure to include information about which browser and operating system you are on as well as the necessary steps to reproduce the issue. If possible please include a link to a sample presentation where the bug can be tested.","title":"Bug Reports"},{"location":"slides/test/node_modules/reveal.js/CONTRIBUTING/#pull-requests","text":"Should follow the coding style of the file you work in, most importantly: Tabs to indent Single-quoted strings Should be made towards the dev branch Should be submitted from a feature/topic branch (not your master)","title":"Pull Requests"},{"location":"slides/test/node_modules/reveal.js/CONTRIBUTING/#plugins","text":"Please do not submit plugins as pull requests. They should be maintained in their own separate repository. More information here: https://github.com/hakimel/reveal.js/wiki/Plugin-Guidelines","title":"Plugins"},{"location":"slides/test/node_modules/reveal.js/css/theme/","text":"Dependencies \u00b6 Themes are written using Sass to keep things modular and reduce the need for repeated selectors across files. Make sure that you have the reveal.js development environment including the Grunt dependencies installed before proceeding: https://github.com/hakimel/reveal.js#full-setup Creating a Theme \u00b6 To create your own theme, start by duplicating a .scss file in /css/theme/source . It will be automatically compiled by Grunt from Sass to CSS (see the Gruntfile ) when you run npm run build -- css-themes . Each theme file does four things in the following order: Include /css/theme/template/mixins.scss Shared utility functions. Include /css/theme/template/settings.scss Declares a set of custom variables that the template file (step 4) expects. Can be overridden in step 3. Override This is where you override the default theme. Either by specifying variables (see settings.scss for reference) or by adding any selectors and styles you please. Include /css/theme/template/theme.scss The template theme file which will generate final CSS output based on the currently defined variables.","title":"Index"},{"location":"slides/test/node_modules/reveal.js/css/theme/#dependencies","text":"Themes are written using Sass to keep things modular and reduce the need for repeated selectors across files. Make sure that you have the reveal.js development environment including the Grunt dependencies installed before proceeding: https://github.com/hakimel/reveal.js#full-setup","title":"Dependencies"},{"location":"slides/test/node_modules/reveal.js/css/theme/#creating-a-theme","text":"To create your own theme, start by duplicating a .scss file in /css/theme/source . It will be automatically compiled by Grunt from Sass to CSS (see the Gruntfile ) when you run npm run build -- css-themes . Each theme file does four things in the following order: Include /css/theme/template/mixins.scss Shared utility functions. Include /css/theme/template/settings.scss Declares a set of custom variables that the template file (step 4) expects. Can be overridden in step 3. Override This is where you override the default theme. Either by specifying variables (see settings.scss for reference) or by adding any selectors and styles you please. Include /css/theme/template/theme.scss The template theme file which will generate final CSS output based on the currently defined variables.","title":"Creating a Theme"},{"location":"slides/test/node_modules/reveal.js/plugin/markdown/example/","text":"Markdown Demo \u00b6 External 1.1 \u00b6 Content 1.1 Note: This will only appear in the speaker notes window. External 1.2 \u00b6 Content 1.2 External 2 \u00b6 Content 2.1 External 3.1 \u00b6 Content 3.1 External 3.2 \u00b6 Content 3.2 External 3.3 \u00b6","title":"Markdown Demo"},{"location":"slides/test/node_modules/reveal.js/plugin/markdown/example/#markdown-demo","text":"","title":"Markdown Demo"},{"location":"slides/test/node_modules/reveal.js/plugin/markdown/example/#external-11","text":"Content 1.1 Note: This will only appear in the speaker notes window.","title":"External 1.1"},{"location":"slides/test/node_modules/reveal.js/plugin/markdown/example/#external-12","text":"Content 1.2","title":"External 1.2"},{"location":"slides/test/node_modules/reveal.js/plugin/markdown/example/#external-2","text":"Content 2.1","title":"External 2"},{"location":"slides/test/node_modules/reveal.js/plugin/markdown/example/#external-31","text":"Content 3.1","title":"External 3.1"},{"location":"slides/test/node_modules/reveal.js/plugin/markdown/example/#external-32","text":"Content 3.2","title":"External 3.2"},{"location":"slides/test/node_modules/reveal.js/plugin/markdown/example/#external-33","text":"","title":"External 3.3"},{"location":"slides/test/node_modules/reveal.js/test/simple/","text":"Slide 1.1 \u00b6 var a = 1; Slide 1.2 \u00b6 Slide 2 \u00b6","title":"Simple"},{"location":"slides/test/node_modules/reveal.js/test/simple/#slide-11","text":"var a = 1;","title":"Slide 1.1"},{"location":"slides/test/node_modules/reveal.js/test/simple/#slide-12","text":"","title":"Slide 1.2"},{"location":"slides/test/node_modules/reveal.js/test/simple/#slide-2","text":"","title":"Slide 2"}]}